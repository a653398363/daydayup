import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as t,c as a,a as s}from"./app-R7pVbBlq.js";const n={},p=s(`<h1 id="typescript" tabindex="-1"><a class="header-anchor" href="#typescript"><span>TypeScript</span></a></h1><p><a href="https://www.typescriptlang.org/" target="_blank" rel="noopener noreferrer">TypeScript 官网</a><br><a href="https://www.tslang.cn/" target="_blank" rel="noopener noreferrer">TypeScript 中文网</a></p><p>TypeScript 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。</p><blockquote><p>TypeScript 是 JavaScript 的超集，具有可选的类型并可以编译为纯 JavaScript。从技术上讲 TypeScript 就是具有静态类型的 JavaScript</p></blockquote><h2 id="typescript-优缺点" tabindex="-1"><a class="header-anchor" href="#typescript-优缺点"><span>TypeScript 优缺点</span></a></h2><ul><li>增强代码的可维护性，尤其在大型项目的时候效果显著</li><li>友好地在编辑器里提示错误，编译阶段就能检查类型发现大部分错误</li><li>支持最新的 JavaScript 新特特性</li><li>周边生态繁荣，vue3 已全面支持 typescript</li></ul><h2 id="缺点" tabindex="-1"><a class="header-anchor" href="#缺点"><span>缺点</span></a></h2><ul><li>需要一定的学习成本</li><li>和一些插件库的兼容并不是特别完美，如以前在 vue2 项目里使用 typescript 就并不是那么顺畅</li><li>增加前期开发的成本，毕竟你需要写更多的代码（但是便于后期的维护）</li></ul><h2 id="安装-typescript" tabindex="-1"><a class="header-anchor" href="#安装-typescript"><span>安装 typescript</span></a></h2><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>npm install <span class="token operator">-</span>g  typescript <span class="token comment">// 全局安装 tss</span>

tsc <span class="token operator">-</span>v  <span class="token comment">// 查看版本</span>

<span class="token comment">// 生成 tsconfig.json 配置文件</span>
tsc <span class="token operator">--</span>init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行命令后就可以生成了一个 tsconfig.json 文件，<a href="https://www.tslang.cn/docs/handbook/tsconfig-json.html" target="_blank" rel="noopener noreferrer">ts 配置</a>可在此文件内编写</p><p>在我们 helloworld.ts 文件中,随便写点什么</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token literal-property property">s</span><span class="token operator">:</span> string <span class="token operator">=</span> <span class="token string">&#39;今朝有酒今朝醉&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>控制台执行 tsc helloworld.ts 命令，目录下生成了一个同名的 helloworld.js 文件，代码如下</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">var</span> s <span class="token operator">=</span> <span class="token string">&#39;今朝有酒今朝醉&#39;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>通过 tsc 命令， typescript 代码被转换成 js 代码</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>node helloworld<span class="token punctuation">.</span>js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>即可看到输出结果</p><h2 id="安装-ts-node" tabindex="-1"><a class="header-anchor" href="#安装-ts-node"><span>安装 ts-node</span></a></h2><p>通过我们上面的一通操作，我们知道了运行 tsc 命令就可以编译生成一个 js 文件，但是如果每次改动我们都要手动去执行编译，然后再通过 node 命令才能查看运行结果岂不是太麻烦了</p><p>而 ts-node 正是来解决这个问题的</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>npm i <span class="token operator">-</span>g ts<span class="token operator">-</span>node <span class="token comment">// 全局安装ts-node</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>有了这个插件，我们就可以直接运行.ts 文件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>ts<span class="token operator">-</span>node helloworld<span class="token punctuation">.</span>ts
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>可以看到我们的打印结果已经输出,后续我们的示例都可以通过这个命令来进行验证</p><h2 id="typescript-基本类型" tabindex="-1"><a class="header-anchor" href="#typescript-基本类型"><span>TypeScript 基本类型</span></a></h2><p><a href="https://www.tslang.cn/docs/handbook/basic-types.html" target="_blank" rel="noopener noreferrer">TypeScript 基本类型</a></p>`,27),i=[p];function r(c,l){return t(),a("div",null,i)}const u=e(n,[["render",r],["__file","index.html.vue"]]),v=JSON.parse('{"path":"/Front/ts/","title":"TypeScript","lang":"zh-CN","frontmatter":{"icon":"article","category":["TypeScript"],"tag":["TypeScript"],"description":"TypeScript TypeScript 官网 TypeScript 中文网 TypeScript 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。 TypeScript 是 JavaScript 的超集，具有可选的类型并可以编译为纯 JavaScript...","head":[["meta",{"property":"og:url","content":"https://lfange.github.io/Front/ts/"}],["meta",{"property":"og:site_name","content":"哓番茄"}],["meta",{"property":"og:title","content":"TypeScript"}],["meta",{"property":"og:description","content":"TypeScript TypeScript 官网 TypeScript 中文网 TypeScript 是一种由微软开发的自由和开源的编程语言。它是 JavaScript 的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。 TypeScript 是 JavaScript 的超集，具有可选的类型并可以编译为纯 JavaScript..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-29T13:35:43.000Z"}],["meta",{"property":"article:author","content":"哓番茄"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:modified_time","content":"2023-03-29T13:35:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"TypeScript\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-29T13:35:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哓番茄\\",\\"url\\":\\"https://lfange.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"TypeScript 优缺点","slug":"typescript-优缺点","link":"#typescript-优缺点","children":[]},{"level":2,"title":"缺点","slug":"缺点","link":"#缺点","children":[]},{"level":2,"title":"安装 typescript","slug":"安装-typescript","link":"#安装-typescript","children":[]},{"level":2,"title":"安装 ts-node","slug":"安装-ts-node","link":"#安装-ts-node","children":[]},{"level":2,"title":"TypeScript 基本类型","slug":"typescript-基本类型","link":"#typescript-基本类型","children":[]}],"git":{"createdTime":1661931588000,"updatedTime":1680096943000,"contributors":[{"name":"FanGe","email":"653398363@qq.com","commits":2}]},"readingTime":{"minutes":1.99,"words":596},"filePathRelative":"Front/ts/README.md","localizedDate":"2022年8月31日","excerpt":"","autoDesc":true}');export{u as comp,v as data};
