import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,a as e}from"./app-R7pVbBlq.js";const t="/assets/externalTask-BxeIF41M.jpg",p="/assets/emptyworkId-cyqcZmm-.jpg",o={},r=e(`<h2 id="发布流程" tabindex="-1"><a class="header-anchor" href="#发布流程"><span>发布流程</span></a></h2><p>完成流程设计后，需要发布流程<br><a href="https://docs.camunda.org/get-started/quick-start/deploy/" target="_blank" rel="noopener noreferrer">官网教程</a><a href="https://zhuanlan.zhihu.com/p/375908620" target="_blank" rel="noopener noreferrer">知乎</a><br><a href="https://docs.camunda.org/manual/7.17/reference/rest/deployment/post-deployment/" target="_blank" rel="noopener noreferrer">create Api</a></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>engine<span class="token operator">-</span>rest<span class="token operator">/</span>deployment<span class="token operator">/</span>create
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="parameters-request-body" tabindex="-1"><a class="header-anchor" href="#parameters-request-body"><span>Parameters Request Body</span></a></h3><p>xml 是 bpmn 文件，发布流程需要传送文件的文件流数据</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> dpm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
dpm<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;deployment-name&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;payment&#39;</span><span class="token punctuation">)</span>
dpm<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;deployment-source&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Camunda Modeler&#39;</span><span class="token punctuation">)</span>
dpm<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;enable-duplicate-filtering&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
dpm<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>
  <span class="token string">&#39;Content-Disposition: form-data;name=&quot;payment.bpmn&quot;;filename=&quot;payment.bpmn&quot;;Content-Type: text/xml&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>xml<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="开始流程" tabindex="-1"><a class="header-anchor" href="#开始流程"><span>开始流程</span></a></h2><p>请求接口</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>engine<span class="token operator">-</span>rest<span class="token operator">/</span>process<span class="token operator">-</span>definition<span class="token operator">/</span>key<span class="token operator">/</span>$<span class="token punctuation">{</span><span class="token constant">ID</span><span class="token punctuation">}</span><span class="token operator">/</span>start
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>请求头设置 <code>Content-Type</code> = <code>application/json</code></p><p>请求参数</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">{</span>
  <span class="token string-property property">&quot;variables&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;value&quot;</span><span class="token operator">:</span><span class="token number">555</span><span class="token punctuation">,</span>
      <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span><span class="token string">&quot;integer&quot;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;item&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token string-property property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;item-xyz&quot;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="process-instance" tabindex="-1"><a class="header-anchor" href="#process-instance"><span>process-instance</span></a></h2><h3 id="activity-instance" tabindex="-1"><a class="header-anchor" href="#activity-instance"><span>Activity Instance</span></a></h3><blockquote><p>通过 id 检索给定流程实例的活动实例（树 <a href="https://docs.camunda.org/manual/7.17/reference/rest/process-instance/get-activity-instances/" target="_blank" rel="noopener noreferrer">API</a></p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">/</span>process<span class="token operator">-</span>instance<span class="token operator">/</span>dcb58801<span class="token operator">-</span>34c1<span class="token operator">-</span>11ed<span class="token operator">-</span><span class="token number">8348</span><span class="token operator">-</span>00d8617d5d1d<span class="token operator">/</span>activity<span class="token operator">-</span>instances
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="form-variables" tabindex="-1"><a class="header-anchor" href="#form-variables"><span>form-variables</span></a></h3><blockquote><p><a href="https://docs.camunda.org/manual/7.17/reference/rest/task/get-form-variables/" target="_blank" rel="noopener noreferrer">form-variables</a> 检索任务的表单项，如果定义了表单，则返回表单项内容</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// GET</span>
<span class="token operator">/</span>task<span class="token operator">/</span><span class="token punctuation">{</span>id<span class="token punctuation">}</span><span class="token operator">/</span>form<span class="token operator">-</span>variables
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="usertask" tabindex="-1"><a class="header-anchor" href="#usertask"><span>UserTask</span></a></h2><p><a href="https://docs.camunda.org/manual/7.17/reference/rest/task/post-submit-form/" target="_blank" rel="noopener noreferrer">submit-form Api</a></p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// API</span>
<span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>engine<span class="token operator">-</span>rest<span class="token operator">/</span>task<span class="token operator">/</span>0e9396b2<span class="token operator">-</span>34bd<span class="token operator">-</span>11ed<span class="token operator">-</span>b695<span class="token operator">-</span>00d8617d5d1d<span class="token operator">/</span>submit<span class="token operator">-</span>form

<span class="token comment">// Parameters:</span>
<span class="token punctuation">{</span>
    <span class="token string-property property">&quot;variables&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token string-property property">&quot;amount&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token number">9568751</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;item&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token string">&quot;item&quot;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        <span class="token string-property property">&quot;approved&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token string-property property">&quot;value&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="service-tasks" tabindex="-1"><a class="header-anchor" href="#service-tasks"><span>Service Tasks</span></a></h2><p>Service Tasks 触发有<a href="https://docs.camunda.org/manual/latest/reference/bpmn20/tasks/service-task/" target="_blank" rel="noopener noreferrer">几种方法</a>，以下是使用 External Tasks 触发.</p><p>External Tasks 可以选择<a href="https://docs.camunda.org/get-started/quick-start/service-task/" target="_blank" rel="noopener noreferrer"><code>java</code>或<code>NodeJs</code></a>编写外部任务，每当走到 Service Task，都会触发外部任务</p><p><img src="`+t+`" alt="workerId" loading="lazy"><br> 上图是一个触发 Service Task 的流程实例，当前节点是在 Service Task 处</p><p><a href="https://docs.camunda.org/get-started/quick-start/service-task/" target="_blank" rel="noopener noreferrer">node task Worker</a></p><h3 id="implement-an-external-task-worker" tabindex="-1"><a class="header-anchor" href="#implement-an-external-task-worker"><span>Implement an external task worker</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Client<span class="token punctuation">,</span> logger <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;camunda-external-task-client-js&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> open <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 引入fs模块</span>

<span class="token comment">// configuration for the Client:</span>
<span class="token comment">//  - &#39;baseUrl&#39;: url to the Process Engine</span>
<span class="token comment">//  - &#39;logger&#39;: utility to automatically log important events</span>
<span class="token comment">//  - &#39;asyncResponseTimeout&#39;: long polling timeout (then a new request will be issued)</span>
<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">baseUrl</span><span class="token operator">:</span> <span class="token string">&#39;http://localhost:8080/engine-rest&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">use</span><span class="token operator">:</span> logger<span class="token punctuation">,</span>
  <span class="token literal-property property">asyncResponseTimeout</span><span class="token operator">:</span> <span class="token number">10000</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token comment">// create a Client instance with custom configuration</span>
<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span>config<span class="token punctuation">)</span>

<span class="token comment">// susbscribe to the topic: &#39;charge0914&#39;</span>
client<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token string">&#39;charge0914&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> task<span class="token punctuation">,</span> taskService <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// Put your business logic here</span>

  <span class="token comment">// Get a process variable</span>
  <span class="token keyword">const</span> amount <span class="token operator">=</span> task<span class="token punctuation">.</span>variables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;amount&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> item <span class="token operator">=</span> task<span class="token punctuation">.</span>variables<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;item&#39;</span><span class="token punctuation">)</span>

  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
    <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Charging credit card with an amount of </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>amount<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">€ for the item &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>item<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;...</span><span class="token template-punctuation string">\`</span></span>
  <span class="token punctuation">)</span>

  fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>
    <span class="token string">&#39;./taskService.txt&#39;</span><span class="token punctuation">,</span>
    <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span> <span class="token literal-property property">flag</span><span class="token operator">:</span> <span class="token string">&#39;a&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> err
      <span class="token punctuation">}</span>
      <span class="token comment">// 写入成功后读取测试</span>
      <span class="token comment">// fs.readFile(&#39;./taskService.txt&#39;, &#39;utf-8&#39;, function(err, data) {</span>
      <span class="token comment">//     if (err) {</span>
      <span class="token comment">//         throw err;</span>
      <span class="token comment">//     }</span>
      <span class="token comment">//     console.log(data);</span>
      <span class="token comment">// });</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
  <span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;https://docs.camunda.org/get-started/quick-start/success&#39;</span><span class="token punctuation">)</span>

  <span class="token comment">// Complete the task</span>
  <span class="token keyword">await</span> taskService<span class="token punctuation">.</span><span class="token function">complete</span><span class="token punctuation">(</span>task<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="通过-complete-可以完成该流程任务" tabindex="-1"><a class="header-anchor" href="#通过-complete-可以完成该流程任务"><span>通过 <code>complete</code> 可以完成该流程任务</span></a></h3><p><a href="https://docs.camunda.org/manual/7.17/reference/rest/external-task/post-complete/" target="_blank" rel="noopener noreferrer">complete Api</a><br> 示例所需要的参数对应上图</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// API 接口</span>
<span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8080</span><span class="token operator">/</span>engine<span class="token operator">-</span>rest<span class="token operator">/</span>external<span class="token operator">-</span>task<span class="token operator">/</span><span class="token punctuation">{</span>externalTaskid<span class="token punctuation">}</span><span class="token operator">/</span>complete

<span class="token comment">// Request Body</span>
<span class="token punctuation">{</span>
  <span class="token string-property property">&quot;workerId&quot;</span><span class="token operator">:</span> $<span class="token punctuation">{</span>workerId<span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Worker Id 为空</p><p><img src="`+p+'" alt="WorkId Empty" loading="lazy"> 在使用时，我发现当 <code>externalTask</code>没有开启脚本的时候<code>WorkerId</code>有为空的情况， <code>node ./xx.js</code>运行脚本就没有问题了。</p></div><h2 id="reference" tabindex="-1"><a class="header-anchor" href="#reference"><span>reference</span></a></h2><p><a href="https://docs.camunda.org/manual/7.17/reference/rest/overview/" target="_blank" rel="noopener noreferrer">Camunda Rest Api</a></p>',35),c=[r];function l(i,u){return s(),a("div",null,c)}const m=n(o,[["render",l],["__file","camunda.html.vue"]]),v=JSON.parse('{"path":"/tools/camunda.html","title":"Camunda","lang":"zh-CN","frontmatter":{"icon":"tool","title":"Camunda","category":["流程引擎"],"tag":["Camunda"],"description":"发布流程 完成流程设计后，需要发布流程 官网教程 知乎 create Api Parameters Request Body xml 是 bpmn 文件，发布流程需要传送文件的文件流数据 开始流程 请求接口 请求头设置 Content-Type = application/json 请求参数 process-instance Activity Inst...","head":[["meta",{"property":"og:url","content":"https://lfange.github.io/tools/camunda.html"}],["meta",{"property":"og:site_name","content":"哓番茄"}],["meta",{"property":"og:title","content":"Camunda"}],["meta",{"property":"og:description","content":"发布流程 完成流程设计后，需要发布流程 官网教程 知乎 create Api Parameters Request Body xml 是 bpmn 文件，发布流程需要传送文件的文件流数据 开始流程 请求接口 请求头设置 Content-Type = application/json 请求参数 process-instance Activity Inst..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-29T13:35:43.000Z"}],["meta",{"property":"article:author","content":"哓番茄"}],["meta",{"property":"article:tag","content":"Camunda"}],["meta",{"property":"article:modified_time","content":"2023-03-29T13:35:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Camunda\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-29T13:35:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哓番茄\\",\\"url\\":\\"https://lfange.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"发布流程","slug":"发布流程","link":"#发布流程","children":[{"level":3,"title":"Parameters Request Body","slug":"parameters-request-body","link":"#parameters-request-body","children":[]}]},{"level":2,"title":"开始流程","slug":"开始流程","link":"#开始流程","children":[]},{"level":2,"title":"process-instance","slug":"process-instance","link":"#process-instance","children":[{"level":3,"title":"Activity Instance","slug":"activity-instance","link":"#activity-instance","children":[]},{"level":3,"title":"form-variables","slug":"form-variables","link":"#form-variables","children":[]}]},{"level":2,"title":"UserTask","slug":"usertask","link":"#usertask","children":[]},{"level":2,"title":"Service Tasks","slug":"service-tasks","link":"#service-tasks","children":[{"level":3,"title":"Implement an external task worker","slug":"implement-an-external-task-worker","link":"#implement-an-external-task-worker","children":[]},{"level":3,"title":"通过 complete 可以完成该流程任务","slug":"通过-complete-可以完成该流程任务","link":"#通过-complete-可以完成该流程任务","children":[]}]},{"level":2,"title":"reference","slug":"reference","link":"#reference","children":[]}],"git":{"createdTime":1663136905000,"updatedTime":1680096943000,"contributors":[{"name":"FanGe","email":"653398363@qq.com","commits":8}]},"readingTime":{"minutes":2.08,"words":624},"filePathRelative":"tools/camunda.md","localizedDate":"2022年9月14日","excerpt":"","autoDesc":true}');export{m as comp,v as data};
