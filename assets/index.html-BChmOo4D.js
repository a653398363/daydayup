import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as e,a as s}from"./app-R7pVbBlq.js";const t={},o=s(`<h2 id="feature" tabindex="-1"><a class="header-anchor" href="#feature"><span>feature</span></a></h2><ul><li>简洁、快速、安全</li><li>并行、有趣、开源</li><li>内存管理、数组安全、编译迅速</li></ul><p>与<code>JavaScript</code>类似, Go 语言接受了函数式编程的一些想法，支持匿名函数与闭包，函数式声明的方法，与<code>JavaScript</code>数组类似的 <code>slice 切片</code> 与<code>C</code>类似的指针语法，<code>interface</code>、<code>struct结构</code></p><p>再如，Go 语言接受了以<code>Erlang</code>语言为代表的面向消息编程思想，支持<code>goroutine</code>和<code>通道</code>，并推荐使用消息而不是共享内存来进行并发编程。总体来说，Go 语言是一个非常现代化的语言，精小但非常强大</p><ul><li>自动垃圾回收</li><li>更丰富的内置类型</li><li>函数多返回值</li><li>错误处理</li><li>匿名函数和闭包</li><li>类型和接口</li><li>并发编程</li><li>反射</li><li>语言交互性</li></ul><h2 id="配置-goproxy" tabindex="-1"><a class="header-anchor" href="#配置-goproxy"><span>配置 GOPROXY</span></a></h2><p>Go1.12 版本之后，开始使用 go mod 模式来管理依赖环境了</p><p>由于国内访问不到默认的 GOPROXY 配置链接，所以我们需要换一个 PROXY，这里推荐使用https://goproxy.io或https://goproxy.cn。</p><p>可以执行下面的命令修改 GOPROXY：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>go env <span class="token operator">-</span>w <span class="token constant">GOPROXY</span><span class="token operator">=</span>https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>goproxy<span class="token punctuation">.</span>cn<span class="token punctuation">,</span>direct
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="go-mod" tabindex="-1"><a class="header-anchor" href="#go-mod"><span>GO MOD</span></a></h2><p>golang 提供了 go mod 命令来管理包。 go mod 有以下命令：</p><table><thead><tr><th>命令</th><th>说明</th></tr></thead><tbody><tr><td>download</td><td>download modules to local cache(下载依赖包)</td></tr><tr><td>edit</td><td>edit go.mod from tools or scripts（编辑 go.mod)</td></tr><tr><td>graph</td><td>print module requirement graph (打印模块依赖图)</td></tr><tr><td>init</td><td>initialize new module in current directory（在当前目录初始化 mod）</td></tr><tr><td>tidy</td><td>add missing and remove unused modules(拉取缺少的模块，移除不用的模块)</td></tr><tr><td>vendor</td><td>make vendored copy of dependencies(将依赖复制到 vendor 下)</td></tr><tr><td>verify</td><td>verify dependencies have expected content (验证依赖是否正确）</td></tr><tr><td>why</td><td>explain why packages or modules are needed(解释为什么需要依赖)</td></tr></tbody></table><h3 id="golang-路径设置" tabindex="-1"><a class="header-anchor" href="#golang-路径设置"><span>Golang 路径设置</span></a></h3><p><a href="https://go.dev/doc/tutorial/call-module-code" target="_blank" rel="noopener noreferrer">Go module 本地开发</a><br> 由于<code>go</code>的<code>package包</code>需要下载，而本地的包没有发布，所有需要改路径</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>go mod edit <span class="token operator">-</span>replace example<span class="token punctuation">.</span>com<span class="token operator">/</span>greetings<span class="token operator">=</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>greetings
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>要启用 go module 支持首先要设置环境变量 GO111MODULE，通过它可以开启或关闭模块支持，它有三个可选值：off、on、auto，默认值是 auto。</p><ol><li>GO111MODULE=off 禁用模块支持，编译时会从 GOPATH 和 vendor 文件夹中查找包。</li><li>GO111MODULE=on 启用模块支持，编译时会忽略 GOPATH 和 vendor 文件夹，只根据 go.mod 下载依赖。</li><li>GO111MODULE=auto，当项目在$GOPATH/src 外且项目根目录有 go.mod 文件时，开启模块支持。 通过以下命令修改</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>go env <span class="token operator">-</span>w <span class="token constant">GO111MODULE</span><span class="token operator">=</span>on
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>使用 go module 模式新建项目时，我们需要通过 <code>go mod init</code> 项目名命令对项目进行初始化，该命令会在项目根目录下生成 go.mod 文件。例如，我们使用 hello 作为我们第一个 Go 项目的名称，执行如下命令。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>go mod init hello
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>运行之前可以使用 <code>​go mod tidy</code>​ 命令将所需依赖添加到 go.mod 文件中，并且能去掉项目中不需要的依赖</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>$ go mod tidy
<span class="token literal-property property">go</span><span class="token operator">:</span> found example<span class="token punctuation">.</span>com<span class="token operator">/</span>greetings <span class="token keyword">in</span> example<span class="token punctuation">.</span>com<span class="token operator">/</span>greetings v0<span class="token punctuation">.</span><span class="token number">0.0</span><span class="token operator">-</span><span class="token number">00010101000000</span><span class="token operator">-</span><span class="token number">000000000000</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="updating-modules" tabindex="-1"><a class="header-anchor" href="#updating-modules"><span>Updating modules</span></a></h2><p>有时候在项目中需要更新 github 上的依赖包，则需要手动执行更新 module 操作，我们使用<code>go get</code></p><ul><li>运行 <code>go get -u</code> 以使用最新的 minor 版本或修补程序版本（即它将从 1.0.0 更新到例如 1.0.1，或者，如果可用，则更新为 1.1.0）</li><li>运行 <code>go get -u=patch</code> 以使用最新的 修补程序 版本（即，将更新为 1.0.1 但不更新 为 1.1.0）</li><li>运行 <code>go get package@version</code> 以更新到特定版本（例如 github.com/lfange/lfange.github.io@v1.0.1）</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// 更新最新</span>
$ go get <span class="token operator">-</span>u
$ go get <span class="token operator">-</span>u<span class="token operator">=</span>patch
<span class="token comment">//指定包，指定版本</span>
$ go <span class="token keyword">get</span> github<span class="token punctuation">.</span>com<span class="token operator">/</span>lfange<span class="token operator">/</span>lfange<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io@v1<span class="token punctuation">.</span><span class="token number">0.1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>操作完，go.mod 文件会修改如下:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>go <span class="token number">1.19</span><span class="token number">.1</span>

<span class="token function">require</span> <span class="token punctuation">(</span>
    github<span class="token punctuation">.</span>com<span class="token operator">/</span>lfange<span class="token operator">/</span>lfange<span class="token punctuation">.</span>github<span class="token punctuation">.</span>io v1<span class="token punctuation">.</span><span class="token number">0.1</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果在项目中使用两个不同大版本,则可以用别名</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">package</span> main

<span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;fmt&quot;</span>
    lfange <span class="token string">&quot;github.com/lfange/lfange.github.io&quot;</span>
    mv2 <span class="token string">&quot;github.com/lfange/lfange.github.io/v2&quot;</span>
<span class="token punctuation">)</span>

func <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    g<span class="token punctuation">,</span> <span class="token literal-property property">err</span> <span class="token operator">:</span><span class="token operator">=</span> mv2<span class="token punctuation">.</span><span class="token function">SayHi</span><span class="token punctuation">(</span><span class="token string">&quot;Roberto&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;pt&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> err <span class="token operator">!=</span> nil <span class="token punctuation">{</span>
        <span class="token function">panic</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span>

    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>lfange<span class="token punctuation">.</span><span class="token function">SayHi</span><span class="token punctuation">(</span><span class="token string">&quot;Roberto&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>执行一下 go mod tidy</p><h2 id="go-跨域" tabindex="-1"><a class="header-anchor" href="#go-跨域"><span>Go 跨域</span></a></h2><p>Gin 框架配置处理跨域的中间件：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>func <span class="token function">Cors</span><span class="token punctuation">(</span><span class="token parameter">context <span class="token operator">*</span>gin<span class="token punctuation">.</span>Context</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">method</span> <span class="token operator">:</span><span class="token operator">=</span> context<span class="token punctuation">.</span>Request<span class="token punctuation">.</span>Method
	<span class="token comment">// 必须，接受指定域的请求，可以使用*不加以限制，但不安全</span>
	<span class="token comment">//context.Header(&quot;Access-Control-Allow-Origin&quot;, &quot;*&quot;)</span>
	context<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> context<span class="token punctuation">.</span><span class="token function">GetHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Origin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>context<span class="token punctuation">.</span><span class="token function">GetHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Origin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token comment">// 必须，设置服务器支持的所有跨域请求的方法</span>
	context<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Methods&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;POST, GET, PUT, DELETE, OPTIONS&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 服务器支持的所有头信息字段，不限于浏览器在&quot;预检&quot;中请求的字段</span>
	context<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Type, Content-Length, Token&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 可选，设置XMLHttpRequest的响应对象能拿到的额外字段</span>
	context<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Expose-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Access-Control-Allow-Headers, Token&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 可选，是否允许后续请求携带认证信息Cookir，该值只能是true，不需要则不设置</span>
	context<span class="token punctuation">.</span><span class="token function">Header</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Credentials&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;true&quot;</span><span class="token punctuation">)</span>
	<span class="token comment">// 放行所有OPTIONS方法</span>
	<span class="token keyword">if</span> method <span class="token operator">==</span> <span class="token string">&quot;OPTIONS&quot;</span> <span class="token punctuation">{</span>
		context<span class="token punctuation">.</span><span class="token function">AbortWithStatus</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span>StatusNoContent<span class="token punctuation">)</span>
		<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
	context<span class="token punctuation">.</span><span class="token function">Next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>Go 资料</summary><ul><li><a href="https://go-zh.org/" target="_blank" rel="noopener noreferrer">Go 中文官网</a></li><li><a href="https://gobyexample-cn.github.io/" target="_blank" rel="noopener noreferrer">Go by Example 中文版</a></li><li><a href="https://fuckcloudnative.io/the-way-to-go/" target="_blank" rel="noopener noreferrer">Go 入门指南</a></li><li><a href="https://book.itsfun.top/gopl-zh/" target="_blank" rel="noopener noreferrer">Go 语言圣经</a></li><li><a href="http://www.topgoer.com/" target="_blank" rel="noopener noreferrer">Go 语言中文文档</a></li><li><a href="https://chai2010.cn/go2-book/" target="_blank" rel="noopener noreferrer">Go2 编程指南</a></li><li><a href="https://chai2010.cn/advanced-go-programming-book/" target="_blank" rel="noopener noreferrer">Go 语言高级编程</a></li><li><a href="https://www.kancloud.cn/kancloud/web-application-with-golang/44105" target="_blank" rel="noopener noreferrer">Go Web 编程</a></li><li><a href="https://www.processon.com/view/link/5a9ba4c8e4b0a9d22eb3bdf0#map" target="_blank" rel="noopener noreferrer">Go 知识图谱</a></li><li><a href="https://blog.go-zh.org/organizing-go-code" target="_blank" rel="noopener noreferrer">组织 Go 代码</a></li><li><a href="https://blog.go-zh.org/go-slices-usage-and-internals" target="_blank" rel="noopener noreferrer">Go 切片：用法和本质</a></li><li><a href="https://github.com/danceyoung/paper-code/blob/master/package-oriented-design/packageorienteddesign.md" target="_blank" rel="noopener noreferrer">Go 面向包的设计和架构分层</a></li><li><a href="https://www.bookstack.cn/explore?cid=10&amp;tab=popular" target="_blank" rel="noopener noreferrer">更多</a></li></ul></details><details><summary>Gin</summary><ul><li><a href="https://gin-gonic.com/zh-cn/docs/" target="_blank" rel="noopener noreferrer">Gin 官方文档</a></li><li><a href="https://www.kancloud.cn/shuangdeyu/gin_book/949411" target="_blank" rel="noopener noreferrer">Gin 中文文档</a></li><li><a href="https://www.gin-vue-admin.com/" target="_blank" rel="noopener noreferrer">gin-vue-admin</a></li><li><a href="http://blog.itpub.net/31561269/viewspace-2637490/" target="_blank" rel="noopener noreferrer">轻量级 Web 框架 Gin 结构分析</a></li><li><a href="https://www.bookstack.cn/explore?cid=168" target="_blank" rel="noopener noreferrer">更多</a></li></ul></details><details><summary>Gorm</summary><ul><li><a href="https://gorm.io/zh_CN/" target="_blank" rel="noopener noreferrer">GORM 官方文档</a></li><li><a href="http://gorm.book.jasperxu.com/" target="_blank" rel="noopener noreferrer">GORM 中文文档</a></li></ul></details><details><summary>Swag</summary><ul><li><a href="https://github.com/swaggo/swag" target="_blank" rel="noopener noreferrer">Swag 开源地址</a></li><li><a href="https://github.com/swaggo/swag/blob/master/README_zh-CN.md" target="_blank" rel="noopener noreferrer">Swag 中文说明</a></li></ul></details><details><summary>数据库</summary><ul><li><a href="https://docs.microsoft.com/zh-cn/sql/sql-server" target="_blank" rel="noopener noreferrer">SQL Server 技术文档</a></li><li><a href="https://docs.microsoft.com/zh-cn/sql/ssms/download-sql-server-management-studio-ssms" target="_blank" rel="noopener noreferrer">下载 SSMS</a></li></ul><hr><ul><li><a href="https://www.postgresql.org/" target="_blank" rel="noopener noreferrer">PostgreSQL 官网</a></li><li><a href="https://www.runoob.com/postgresql/postgresql-tutorial.html" target="_blank" rel="noopener noreferrer">PostgreSQL 教程</a></li><li><a href="http://www.postgres.cn/docs/13/" target="_blank" rel="noopener noreferrer">PostgreSQL 手册</a></li><li><a href="http://www.ruanyifeng.com/blog/2013/12/getting_started_with_postgresql.html" target="_blank" rel="noopener noreferrer">PostgreSQL 新手入门</a></li><li><a href="https://www.bookstack.cn/explore?cid=166" target="_blank" rel="noopener noreferrer">更多</a></li></ul><hr><ul><li><a href="https://www.bookstack.cn/explore?cid=38" target="_blank" rel="noopener noreferrer">MySQL</a></li><li><a href="https://www.bookstack.cn/explore?cid=43" target="_blank" rel="noopener noreferrer">SQLite</a></li><li><a href="https://www.bookstack.cn/explore?cid=42" target="_blank" rel="noopener noreferrer">Redis</a></li><li><a href="https://www.bookstack.cn/explore?cid=4&amp;tab=popular" target="_blank" rel="noopener noreferrer">更多</a></li></ul></details><details><summary>Elasticsearch</summary><ul><li><a href="https://www.elastic.co/cn/elasticsearch/" target="_blank" rel="noopener noreferrer">Elasticsearch 中文官网</a></li><li><a href="https://www.elastic.co/cn/downloads/elasticsearch" target="_blank" rel="noopener noreferrer">Elasticsearch 下载地址</a></li><li><a href="https://www.elastic.co/guide/cn/elasticsearch/guide/current/index.html" target="_blank" rel="noopener noreferrer">Elasticsearch 权威指南</a></li><li><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/index.html" target="_blank" rel="noopener noreferrer">Elasticsearch 参考文档</a></li><li><a href="https://www.bookstack.cn/explore?cid=210" target="_blank" rel="noopener noreferrer">更多</a></li></ul></details><details><summary>Git + GitLab</summary><ul><li><a href="https://git-scm.com/book/zh/v2" target="_blank" rel="noopener noreferrer">Git 官方教程</a></li><li><a href="https://www.w3cschool.cn/git/" target="_blank" rel="noopener noreferrer">Git 中文教程 - w3c</a></li><li><a href="https://www.yiibai.com/git" target="_blank" rel="noopener noreferrer">Git 中文教程 - 易百</a></li><li><a href="https://www.runoob.com/git/git-tutorial.html" target="_blank" rel="noopener noreferrer">Git 中文教程 - runoob</a></li></ul><hr><ul><li><a href="https://docs.gitlab.com/ee/README.html" target="_blank" rel="noopener noreferrer">GitLab 官方教程</a></li><li><a href="https://www.yiibai.com/gitlab/gitlab_merge_requests.html" target="_blank" rel="noopener noreferrer">GitLab 中文教程 - 易百</a></li><li><a href="http://192.168.200.39:999/help/user/markdown.md" target="_blank" rel="noopener noreferrer">GitLab 支持的 Markdown 语法说明</a></li></ul></details>`,42),r=[o];function l(i,p){return a(),e("div",null,r)}const d=n(t,[["render",l],["__file","index.html.vue"]]),g=JSON.parse('{"path":"/backend/Golang/","title":"Golang","lang":"zh-CN","frontmatter":{"icon":"back-stage","title":"Golang","category":["后端"],"tag":["Golang"],"description":"feature 简洁、快速、安全 并行、有趣、开源 内存管理、数组安全、编译迅速 与JavaScript类似, Go 语言接受了函数式编程的一些想法，支持匿名函数与闭包，函数式声明的方法，与JavaScript数组类似的 slice 切片 与C类似的指针语法，interface、struct结构 再如，Go 语言接受了以Erlang语言为代表的面向消息...","head":[["meta",{"property":"og:url","content":"https://lfange.github.io/backend/Golang/"}],["meta",{"property":"og:site_name","content":"哓番茄"}],["meta",{"property":"og:title","content":"Golang"}],["meta",{"property":"og:description","content":"feature 简洁、快速、安全 并行、有趣、开源 内存管理、数组安全、编译迅速 与JavaScript类似, Go 语言接受了函数式编程的一些想法，支持匿名函数与闭包，函数式声明的方法，与JavaScript数组类似的 slice 切片 与C类似的指针语法，interface、struct结构 再如，Go 语言接受了以Erlang语言为代表的面向消息..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-29T13:35:43.000Z"}],["meta",{"property":"article:author","content":"哓番茄"}],["meta",{"property":"article:tag","content":"Golang"}],["meta",{"property":"article:modified_time","content":"2023-03-29T13:35:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Golang\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-29T13:35:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哓番茄\\",\\"url\\":\\"https://lfange.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"feature","slug":"feature","link":"#feature","children":[]},{"level":2,"title":"配置 GOPROXY","slug":"配置-goproxy","link":"#配置-goproxy","children":[]},{"level":2,"title":"GO MOD","slug":"go-mod","link":"#go-mod","children":[{"level":3,"title":"Golang 路径设置","slug":"golang-路径设置","link":"#golang-路径设置","children":[]}]},{"level":2,"title":"Updating modules","slug":"updating-modules","link":"#updating-modules","children":[]},{"level":2,"title":"Go 跨域","slug":"go-跨域","link":"#go-跨域","children":[]}],"git":{"createdTime":1664352974000,"updatedTime":1680096943000,"contributors":[{"name":"FanGe","email":"653398363@qq.com","commits":9},{"name":"a653398363","email":"653398363@qq.com","commits":2}]},"readingTime":{"minutes":5.33,"words":1599},"filePathRelative":"backend/Golang/README.md","localizedDate":"2022年9月28日","excerpt":"","autoDesc":true}');export{d as comp,g as data};
