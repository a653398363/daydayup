import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,a as e}from"./app-R7pVbBlq.js";const t={},p=e(`<h1 id="vue中scoped和scoped穿透" tabindex="-1"><a class="header-anchor" href="#vue中scoped和scoped穿透"><span>Vue中scoped和scoped穿透</span></a></h1><h2 id="什么是scoped" tabindex="-1"><a class="header-anchor" href="#什么是scoped"><span>什么是scoped？</span></a></h2><p>在Vue文件中的style标签上有一个特殊的属性<code>scoped</code>。当一个style标签拥有<code>scoped</code>属性时候，它的css样式只能用于当前的Vue组件，可以使组件的样式不相互污染。如果一个项目的所有style标签都加上了<code>scoped</code>属性，相当于实现了样式的模块化。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="scoped的实现原理" tabindex="-1"><a class="header-anchor" href="#scoped的实现原理"><span>scoped的实现原理</span></a></h2><p>Vue中的<code>scoped</code>属性的效果主要是通过<code>PostCss</code>实现的。以下是转译前后的代码:</p><p>转译前:</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>less<span class="token punctuation">&quot;</span></span> <span class="token attr-name">scoped</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.example</span><span class="token punctuation">{</span>
        <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>scoped测试案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>转译后:</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
    <span class="token selector">.example[data-v-5558831a]</span> <span class="token punctuation">{</span>
      <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>example<span class="token punctuation">&quot;</span></span> <span class="token attr-name">data-v-5558831a</span><span class="token punctuation">&gt;</span></span>scoped测试案例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>PostCSS</code>给一个组件中的所有DOM添加了一个独一无二的动态属性，给css选择器额外添加一个对应的属性选择器，来选择组件中的DOM,这种做法使得样式只作用于含有该属性的DOM元素(组件内部的DOM)。</p><p><strong>总结：<code>scoped</code>的渲染规则</strong>：</p><ol><li>给HTML的DOM节点添加一个不重复的data属性(例如: data-v-5558831a)来唯一标识这个DOM 元素</li><li>在每句css选择器的末尾(编译后生成的css语句)加一个当前组件的data属性选择器(例如：[data-v-5558831a])来私有化样式</li></ol><h2 id="scoped穿透" tabindex="-1"><a class="header-anchor" href="#scoped穿透"><span>scoped穿透</span></a></h2><p><code>scoped</code>看起来很好用，当时在Vue项目中，当我们引入第三方组件库时(如使用vue-awesome-swiper实现移动端轮播)，需要在局部组件中修改第三方组件库的样式，而又不想去除<code>scoped</code>属性造成组件之间的样式覆盖。这时我们可以通过特殊的方式穿透scoped。</p><p><strong>stylus的样式穿透 使用 <code>&gt;&gt;&gt;</code></strong></p><div class="language-stylus line-numbers-mode" data-ext="styl" data-title="styl"><pre class="language-stylus"><code><span class="token selector">外层 &gt;&gt;&gt; 子组件元素</span>
  <span class="token selector">样式</span>
        
<span class="token selector">.wrapper &gt;&gt;&gt; .swiper-pagination-bullet-active</span>
  <span class="token property-declaration"><span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#fff</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>sass和less的样式穿透 使用<code>/deep/</code></strong></p><div class="language-less line-numbers-mode" data-ext="less" data-title="less"><pre class="language-less"><code><span class="token selector">外层 /deep/ 子组件元素</span> <span class="token punctuation">{</span>
    样式
<span class="token punctuation">}</span>
<span class="token selector">.wrapper /deep/ .swiper-pagination-bullet-active</span><span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #fff<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="在组件中修改第三方组件库样式的其它方法" tabindex="-1"><a class="header-anchor" href="#在组件中修改第三方组件库样式的其它方法"><span>在组件中修改第三方组件库样式的其它方法</span></a></h2><p>上面我们介绍了在使用<code>scoped</code> 属性时，通过<code>scoped</code>穿透的方式修改引入第三方组件库样式的方法，下面我们介绍其它方式来修改引入第三方组件库的样式：</p><ul><li><p>在vue组件中不使用<code>scoped</code>属性</p></li><li><p>在vue组建中使用两个style标签，一个加上<code>scoped</code>属性，一个不加<code>scoped</code>属性，把需要覆盖的css样式写在不加<code>scoped</code>属性的style标签里</p></li><li><p>建立一个reset.css(基础全局样式)文件，里面写覆盖的css样式，在入口文件main.js 中引入</p></li></ul>`,22),c=[p];function o(l,d){return a(),n("div",null,c)}const r=s(t,[["render",o],["__file","Vuescoped.html.vue"]]),k=JSON.parse('{"path":"/Front/Vue/advanced/Vuescoped.html","title":"Vue中scoped和scoped穿透","lang":"zh-CN","frontmatter":{"description":"什么是scoped？ 在Vue文件中的style标签上有一个特殊的属性scoped。当一个style标签拥有scoped属性时候，它的css样式只能用于当前的Vue组件，可以使组件的样式不相互污染。如果一个项目的所有style标签都加上了scoped属性，相当于实现了样式的模块化。","head":[["meta",{"property":"og:url","content":"https://lfange.github.io/Front/Vue/advanced/Vuescoped.html"}],["meta",{"property":"og:site_name","content":"哓番茄"}],["meta",{"property":"og:title","content":"Vue中scoped和scoped穿透"}],["meta",{"property":"og:description","content":"什么是scoped？ 在Vue文件中的style标签上有一个特殊的属性scoped。当一个style标签拥有scoped属性时候，它的css样式只能用于当前的Vue组件，可以使组件的样式不相互污染。如果一个项目的所有style标签都加上了scoped属性，相当于实现了样式的模块化。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-23T09:28:43.000Z"}],["meta",{"property":"article:author","content":"哓番茄"}],["meta",{"property":"article:modified_time","content":"2022-08-23T09:28:43.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue中scoped和scoped穿透\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-23T09:28:43.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哓番茄\\",\\"url\\":\\"https://lfange.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"什么是scoped？","slug":"什么是scoped","link":"#什么是scoped","children":[]},{"level":2,"title":"scoped的实现原理","slug":"scoped的实现原理","link":"#scoped的实现原理","children":[]},{"level":2,"title":"scoped穿透","slug":"scoped穿透","link":"#scoped穿透","children":[]},{"level":2,"title":"在组件中修改第三方组件库样式的其它方法","slug":"在组件中修改第三方组件库样式的其它方法","link":"#在组件中修改第三方组件库样式的其它方法","children":[]}],"git":{"createdTime":1660718589000,"updatedTime":1661246923000,"contributors":[{"name":"FanGe","email":"653398363@qq.com","commits":1}]},"readingTime":{"minutes":2.26,"words":677},"filePathRelative":"Front/Vue/advanced/Vuescoped.md","localizedDate":"2022年8月17日","excerpt":"\\n<h2>什么是scoped？</h2>\\n<p>在Vue文件中的style标签上有一个特殊的属性<code>scoped</code>。当一个style标签拥有<code>scoped</code>属性时候，它的css样式只能用于当前的Vue组件，可以使组件的样式不相互污染。如果一个项目的所有style标签都加上了<code>scoped</code>属性，相当于实现了样式的模块化。</p>\\n","autoDesc":true}');export{r as comp,k as data};
