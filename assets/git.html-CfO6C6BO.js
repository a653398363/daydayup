import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as n,a as e}from"./app-R7pVbBlq.js";const t={},o=e(`<h2 id="工作区域" tabindex="-1"><a class="header-anchor" href="#工作区域"><span>工作区域</span></a></h2><ol><li><p>工作区即自己当前分支所修改的代码，git add xx 之前的！不包括 git add xx 和 git commit xxx 之后的。</p></li><li><p>暂存区<br> 已经 <code>git add xxx</code> 进去，且未 <code>git commit xxx</code> 的</p></li><li><p>本地分支已经 git commit -m xxx 提交到本地分支的</p></li></ol><p>git reset HEAD &lt;路径/文件名&gt;</p><h3 id="取消工作区修改" tabindex="-1"><a class="header-anchor" href="#取消工作区修改"><span>取消工作区修改</span></a></h3><p><code>git checkout — file</code> 可以丢弃工作区的修改<br><code>git checkout . </code> 本地所有修改的。没有的提交的，都返回到原来的状态</p><p>git stash #把所有没有提交的修改暂存到 stash 里面。可用 git stash pop 恢复</p><h2 id="取消暂存区修改" tabindex="-1"><a class="header-anchor" href="#取消暂存区修改"><span>取消暂存区修改</span></a></h2><p><code>git reset HEAD</code> 如果后面什么都不跟的话 就是上一次 add 里面的全部撤销了, 即取消暂存区的到工作区</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git reset <span class="token constant">HEAD</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="回滚到指定-commit" tabindex="-1"><a class="header-anchor" href="#回滚到指定-commit"><span>回滚到指定 commit</span></a></h3><p><code>git log</code> 查看提交记录</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>commit <span class="token function">f6f350c9c73eb703bdf996fc686d5eb0e0cf2a3c</span> <span class="token punctuation">(</span><span class="token constant">HEAD</span> <span class="token operator">-</span><span class="token operator">&gt;</span> master<span class="token punctuation">,</span> origin<span class="token operator">/</span>master<span class="token punctuation">,</span> origin<span class="token operator">/</span><span class="token constant">HEAD</span><span class="token punctuation">)</span>
<span class="token literal-property property">Author</span><span class="token operator">:</span> lfange <span class="token operator">&lt;</span><span class="token number">653398363</span>@qq<span class="token punctuation">.</span>com<span class="token operator">&gt;</span>
<span class="token literal-property property">Date</span><span class="token operator">:</span>   Tue Oct <span class="token number">25</span> <span class="token number">16</span><span class="token operator">:</span><span class="token number">43</span><span class="token operator">:</span><span class="token number">38</span> <span class="token number">2022</span> <span class="token operator">+</span><span class="token number">0800</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>找到需要回滚的 commit <code>f6f350c9c73eb703bdf996fc686d5eb0e0cf2a3c</code>,执行以下命令就可以回滚到这个版本</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git reset <span class="token operator">--</span>hard f6f350c9c73eb703bdf996fc686d5eb0e0cf2a3c
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>回到最新的一次提交<br><code>git reset --hard HEAD^</code> or <code>git reset HEAD^</code> 此时代码保留，回到 git add 之前</p><p>如果需要同时回滚远程</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git push <span class="token operator">-</span>f
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="git-强制拉取远程覆盖本地" tabindex="-1"><a class="header-anchor" href="#git-强制拉取远程覆盖本地"><span>git 强制拉取远程覆盖本地</span></a></h3><p>撤销本地、暂存区、版本库（用远程服务器的<code>master</code>替换本地、暂存区、版本库）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git reset <span class="token operator">--</span>hard origin<span class="token operator">/</span>master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="git-tag" tabindex="-1"><a class="header-anchor" href="#git-tag"><span>git tag</span></a></h2><ol><li><p>在控制台打印出当前仓库的所有标签：git tag, 查看远程服务器标签 git ls-remote --tags</p></li><li><p>搜索符合模式的标签：git tag -l &#39;v0.0.*&#39;</p></li><li><p>创建附注标签：git tag -a v0.0.1 -m &quot;v0.0.1 发布&quot;, annotate</p></li><li><p>删除标签：git tag -d v0.0.1</p></li><li><p>查看标签的版本信息：git show v0.0.1</p></li><li><p>指向打 v0.0.2 标签时的代码状态：git checkout v0.0.2</p></li><li><p>将 v0.0.1 标签提交到 git 服务器：git push origin v0.0.1</p></li><li><p>将本地所有标签一次性提交到 git 服务器：git push origin –tags</p></li><li><p>以下命令就可以取得该 tag 对应的代码了： git checkout tag_name</p></li><li><p>如果要在 tag 代码的基础上做修改，你需要一个分支，这样会从 tag 创建一个分支，然后就和普通的 git 操作一样了： git checkout -b branch_name tag_name</p></li></ol><h2 id="git-stash" tabindex="-1"><a class="header-anchor" href="#git-stash"><span>git stash</span></a></h2><p><code>git stash</code> 可以将当前未提交的修改(即，<strong>工作区的修改和暂存区的修改</strong>)先暂时储藏起来，这样工作区干净了后，就可以切换分支下拉一个 fix 分支。在完成线上 bug 的修复工作后又切换回来</p><p><code>git stash</code> 是本地的，不会通过 git push 命令上传到 git server 上</p><p><code>git stash save [stashMessage]</code> 存储当前修改,并给当前修改新增别名</p><h3 id="标识储藏记录" tabindex="-1"><a class="header-anchor" href="#标识储藏记录"><span>标识储藏记录</span></a></h3><h3 id="查看存储" tabindex="-1"><a class="header-anchor" href="#查看存储"><span>查看存储</span></a></h3><p><code>git stash list</code> 查看所有储藏</p><h3 id="取出储藏" tabindex="-1"><a class="header-anchor" href="#取出储藏"><span>取出储藏</span></a></h3><p><code>git stash pop</code> 用于取出最近一次储藏的修改到工作区，将缓存堆栈中的第一个 stash 删除，并将对应修改应用到当前的工作目录下。</p><p><code>git stash apply stash@xx</code> 将缓存堆栈中的 stash 多次应用到工作目录中，但并不删除 stash 拷贝</p><h3 id="移除-stash" tabindex="-1"><a class="header-anchor" href="#移除-stash"><span>移除 stash</span></a></h3><p>使用<code>git stash drop</code>命令，后面跟着 stash 名字</p><h3 id="查看指定-stash-的-diff" tabindex="-1"><a class="header-anchor" href="#查看指定-stash-的-diff"><span>查看指定 stash 的 diff</span></a></h3><p>使用 <code>git stash show</code> 命令，后面跟着 stash 名字。示例如下</p><h3 id="从-stash-创建分支" tabindex="-1"><a class="header-anchor" href="#从-stash-创建分支"><span>从 stash 创建分支</span></a></h3><p><code>git stash branch stash@xx</code></p><p>命令</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git stash list <span class="token punctuation">[</span><span class="token operator">&lt;</span>options<span class="token operator">&gt;</span><span class="token punctuation">]</span>
git stash show <span class="token punctuation">[</span><span class="token operator">&lt;</span>stash<span class="token operator">&gt;</span><span class="token punctuation">]</span>
git stash drop <span class="token punctuation">[</span><span class="token operator">-</span>q<span class="token operator">|</span><span class="token operator">--</span>quiet<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>stash<span class="token operator">&gt;</span><span class="token punctuation">]</span>
git <span class="token function">stash</span> <span class="token punctuation">(</span> pop <span class="token operator">|</span> apply <span class="token punctuation">)</span> <span class="token punctuation">[</span><span class="token operator">--</span>index<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>q<span class="token operator">|</span><span class="token operator">--</span>quiet<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>stash<span class="token operator">&gt;</span><span class="token punctuation">]</span>
git stash branch <span class="token operator">&lt;</span>branchname<span class="token operator">&gt;</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>stash<span class="token operator">&gt;</span><span class="token punctuation">]</span>
git stash save <span class="token punctuation">[</span><span class="token operator">-</span>p<span class="token operator">|</span><span class="token operator">--</span>patch<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>k<span class="token operator">|</span><span class="token operator">--</span><span class="token punctuation">[</span>no<span class="token operator">-</span><span class="token punctuation">]</span>keep<span class="token operator">-</span>index<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>q<span class="token operator">|</span><span class="token operator">--</span>quiet<span class="token punctuation">]</span>
         <span class="token punctuation">[</span><span class="token operator">-</span>u<span class="token operator">|</span><span class="token operator">--</span>include<span class="token operator">-</span>untracked<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">|</span><span class="token operator">--</span>all<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>message<span class="token operator">&gt;</span><span class="token punctuation">]</span>
git stash <span class="token punctuation">[</span>push <span class="token punctuation">[</span><span class="token operator">-</span>p<span class="token operator">|</span><span class="token operator">--</span>patch<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>k<span class="token operator">|</span><span class="token operator">--</span><span class="token punctuation">[</span>no<span class="token operator">-</span><span class="token punctuation">]</span>keep<span class="token operator">-</span>index<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>q<span class="token operator">|</span><span class="token operator">--</span>quiet<span class="token punctuation">]</span>
         <span class="token punctuation">[</span><span class="token operator">-</span>u<span class="token operator">|</span><span class="token operator">--</span>include<span class="token operator">-</span>untracked<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>a<span class="token operator">|</span><span class="token operator">--</span>all<span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>m<span class="token operator">|</span><span class="token operator">--</span>message <span class="token operator">&lt;</span>message<span class="token operator">&gt;</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
         <span class="token punctuation">[</span><span class="token operator">--</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>pathspec<span class="token operator">&gt;</span>…​<span class="token punctuation">]</span><span class="token punctuation">]</span>
git stash clear
git stash create <span class="token punctuation">[</span><span class="token operator">&lt;</span>message<span class="token operator">&gt;</span><span class="token punctuation">]</span>
git stash store <span class="token punctuation">[</span><span class="token operator">-</span>m<span class="token operator">|</span><span class="token operator">--</span>message <span class="token operator">&lt;</span>message<span class="token operator">&gt;</span><span class="token punctuation">]</span> <span class="token punctuation">[</span><span class="token operator">-</span>q<span class="token operator">|</span><span class="token operator">--</span>quiet<span class="token punctuation">]</span> <span class="token operator">&lt;</span>commit<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="git-restore" tabindex="-1"><a class="header-anchor" href="#git-restore"><span>git restore</span></a></h2><p><code>git restore filename</code> 撤消工作区的修改返回到最近一次 add(缓存区)的版本或者最近一次 commit(当前版本库)的版本(内容恢复到没修改之前的状态)</p><p><code>git restore --staged filename</code> 将暂存区的文件从暂存区撤出，但不会更改文件的内容。</p><h2 id="git-同时推送-github-和-gitee" tabindex="-1"><a class="header-anchor" href="#git-同时推送-github-和-gitee"><span>git 同时推送 github 和 gitee</span></a></h2><ol><li><p>进入工程根目录打开.git 文件夹（需要显示隐藏文件夹）</p></li><li><p>打开.git 文件夹下的 config 文件进行编辑添加 github 和 gitee 仓库地址</p></li></ol><p>添加 url 仓库地址前应保证本地对提交仓库 git 的用户权限</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>remote <span class="token string">&quot;origin&quot;</span><span class="token punctuation">]</span>
  # github 仓库
	url <span class="token operator">=</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>lfange<span class="token operator">/</span>xxx<span class="token punctuation">.</span>git
	# gitee 仓库
  url <span class="token operator">=</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>gitee<span class="token punctuation">.</span>com<span class="token operator">/</span>lfange<span class="token operator">/</span>xxx<span class="token punctuation">.</span>git
  fetch <span class="token operator">=</span> <span class="token operator">+</span>refs<span class="token operator">/</span>heads<span class="token comment">/*:refs/remotes/origin/*
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以在控制台或者<code>git</code>仓库看到推送记录</p><h2 id="git-忽略文件" tabindex="-1"><a class="header-anchor" href="#git-忽略文件"><span>git 忽略文件</span></a></h2><h3 id="忽略未存在缓冲区的文件" tabindex="-1"><a class="header-anchor" href="#忽略未存在缓冲区的文件"><span>忽略未存在缓冲区的文件</span></a></h3><p>在项目根目录创建<code>.gitignore</code>文件，直接添加需要忽略的文件至 <code>.gitignore</code>中.如<code>node_modules/</code></p><h3 id="忽略已存在缓冲区的文件" tabindex="-1"><a class="header-anchor" href="#忽略已存在缓冲区的文件"><span>忽略已存在缓冲区的文件</span></a></h3><p>该情况可能出现在，修改了配置文件，或者修改一些配置适应本地环境的文件。<br> 使用 <code>git update-index --assume-unchanged PATH/FILE</code> 来不追踪该文件更新与否。 PATH/FILE 特定文件比如 config/config.php 等等。</p><h3 id="已经存在缓冲区-但是希望其以后从缓冲区移除" tabindex="-1"><a class="header-anchor" href="#已经存在缓冲区-但是希望其以后从缓冲区移除"><span>已经存在缓冲区，但是希望其以后从缓冲区移除</span></a></h3><p>该情况可能出现在，某些文件可能不需要添加到缓冲区，但是不小心添加到缓冲区，需要忽略，可以先从缓冲区移除，在从.gitignore 文件中忽略 <code>git rm --cached testFile</code> //将该文件从缓冲区移除永远不追踪该文件</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>$ git rm <span class="token operator">--</span>cached <span class="token punctuation">.</span>vscode<span class="token operator">/</span>
rm <span class="token string">&#39;.vscode/c_cpp_properties.json&#39;</span>
rm <span class="token string">&#39;.vscode/settings.json&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="重命名本地分支" tabindex="-1"><a class="header-anchor" href="#重命名本地分支"><span>重命名本地分支</span></a></h2><ul><li>在当前分支时</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git branch <span class="token operator">-</span>m new_branch_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>当不在当前分支时</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git branch <span class="token operator">-</span>m old_branch_name new_branch_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>删除本地分支</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git branch <span class="token operator">-</span>d localBranchName
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>删除远程分支</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git push origin <span class="token operator">--</span><span class="token keyword">delete</span> old_branch_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>上传新命名的本地分支</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git push origin new_branch_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>关联修改后的本地分支与远程分支</li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git branch <span class="token operator">--</span>set<span class="token operator">-</span>upstream<span class="token operator">-</span>to origin<span class="token operator">/</span>new_branch_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="查看远程仓库地址" tabindex="-1"><a class="header-anchor" href="#查看远程仓库地址"><span>查看远程仓库地址</span></a></h2><p><code>git remote -v </code></p><h3 id="修改远程仓库地址" tabindex="-1"><a class="header-anchor" href="#修改远程仓库地址"><span>修改远程仓库地址</span></a></h3><ol><li><p>直接修改 <code>git remote set-url origin &lt;url&gt;</code></p></li><li><p>先删后加</p></li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git remote rm origin
git remote add origin <span class="token punctuation">[</span>url<span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>.git 文件夹下修改</li></ol><p>打开 .git 文件夹下的 config 文件， 修改 remote origin url 地址</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token punctuation">[</span>core<span class="token punctuation">]</span>
	repositoryformatversion <span class="token operator">=</span> <span class="token number">0</span>
	filemode <span class="token operator">=</span> <span class="token boolean">false</span>
	bare <span class="token operator">=</span> <span class="token boolean">false</span>
	logallrefupdates <span class="token operator">=</span> <span class="token boolean">true</span>
	symlinks <span class="token operator">=</span> <span class="token boolean">false</span>
	ignorecase <span class="token operator">=</span> <span class="token boolean">true</span>
<span class="token punctuation">[</span>remote <span class="token string">&quot;origin&quot;</span><span class="token punctuation">]</span>
	url <span class="token operator">=</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.200</span><span class="token number">.39</span><span class="token operator">:</span><span class="token number">999</span><span class="token operator">/</span>wangni<span class="token operator">/</span>blsjgl<span class="token punctuation">.</span>git
	fetch <span class="token operator">=</span> <span class="token operator">+</span>refs<span class="token operator">/</span>heads<span class="token comment">/*:refs/remotes/origin/*
[branch &quot;master&quot;]
	remote = origin
	merge = refs/heads/master
</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="合并-commit" tabindex="-1"><a class="header-anchor" href="#合并-commit"><span>合并 commit</span></a></h2><ul><li><p>先从版本库回退内容到暂存区，再重新提交工作区的内容</p><p>使用 <code>git reset --soft</code> 回退版本库和暂存区的版本，同时保留工作区的变动，之后再重新提交工作区的内容就好了</p><p>合并 commit 之前，先拉取代码，保证本地是最新的，因为合并后要执行 <code>git push --force</code>操作，在 reset 后，本地索引和服务器已经不一致，所以要强制执行 git push</p><p>如果 push 失败，出现 Reject，则需要开启分支强制合入的选项，取消分支保护。</p><p><strong>Settings -&gt; Repository -&gt; Protected Branches -&gt; Protected branch （找到分支） -&gt; Unprotect</strong></p></li><li><p>git rebase</p><ol><li>git log 查看分支</li><li>git rebase -i HEAD~n 使用 git rebase -i HEAD~5 压缩 5 个 commit 为 1 个，或者 git rebase -i 51efaef517abdbf674478de6073c12239d78a56a （第一个 commit 的 id） <ul><li>pick：使用 commit。</li><li>reword：使用 commit，修改 commit 信息。</li><li>squash：使用 commit，将 commit 信息合入上一个 commit。</li><li>fixup：使用 commit，丢弃 commit 信息。</li></ul></li></ol></li></ul><h2 id="git-合并两个不同的仓库" tabindex="-1"><a class="header-anchor" href="#git-合并两个不同的仓库"><span>Git-合并两个不同的仓库</span></a></h2><p>A 仓库地址为：git@github.com:xxx/notebook.git B 仓库地址为：git@e.coding.net:xxx/notebook/notebook.git 需要将 A 仓库改动合并到 B 仓库中，首先保证 A 仓库内所有的改动均已提交</p><ol><li>下载需要进行合并的仓库 B</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git clone git@e<span class="token punctuation">.</span>coding<span class="token punctuation">.</span>net<span class="token operator">:</span>xxx<span class="token operator">/</span>notebook<span class="token operator">/</span>notebook<span class="token punctuation">.</span>git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>添加需要被合并的远程仓库 A</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git remote add base git@github<span class="token punctuation">.</span>com<span class="token operator">:</span>xxx<span class="token operator">/</span>notebook<span class="token punctuation">.</span>git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将 base 作为远程仓库，添加到 本地仓库(origin)中，设置别名为 base(自定义，为了方便与本地仓库 origin 作区分) 3. 把 base 远程仓库（A）中数据抓取到本仓库（B）</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>git fetch base
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>第 2 步 git remote add xxx 我们仅仅是新增了远程仓库的引用，这一步真正将远程仓库的数据抓取到本地，准备后续的更新</p><ol start="4"><li>基于 base 仓库的 master 分支，新建一个分支，并切换到该分支，命名为 &quot;githubB&quot;</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git checkout <span class="token operator">-</span>b githubB base<span class="token operator">/</span>master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>此时使用 git branch 查看所有分支 5. 我们切换到需要合并的分支 master, <code>git checkout master</code> 6. 合并</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git merge githubB <span class="token operator">--</span>allow<span class="token operator">-</span>unrelated<span class="token operator">-</span>histories
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果不加 <code>--allow-unrelated-histories</code> 关键字会报错</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">fatal</span><span class="token operator">:</span> refusing to merge unrelated histories
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果在流程中报上述错误加该关键词<code>--allow-unrelated-histories</code>即可。</p><p>合并过程中可能会遇到各种冲突，如果有冲突解决就可以了。 7. 提交</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>git push origin master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="参考" tabindex="-1"><a class="header-anchor" href="#参考"><span>参考</span></a></h2><p><a href="https://git-scm.com/docs" target="_blank" rel="noopener noreferrer">git docs</a></p>`,99),p=[o];function i(l,r){return s(),n("div",null,p)}const u=a(t,[["render",i],["__file","git.html.vue"]]),g=JSON.parse('{"path":"/tools/git.html","title":"Git","lang":"zh-CN","frontmatter":{"icon":"tool","title":"Git","category":["Git"],"tag":["Git"],"description":"工作区域 工作区即自己当前分支所修改的代码，git add xx 之前的！不包括 git add xx 和 git commit xxx 之后的。 暂存区 已经 git add xxx 进去，且未 git commit xxx 的 本地分支已经 git commit -m xxx 提交到本地分支的 git reset HEAD <路径/文件名> 取消工...","head":[["meta",{"property":"og:url","content":"https://lfange.github.io/tools/git.html"}],["meta",{"property":"og:site_name","content":"哓番茄"}],["meta",{"property":"og:title","content":"Git"}],["meta",{"property":"og:description","content":"工作区域 工作区即自己当前分支所修改的代码，git add xx 之前的！不包括 git add xx 和 git commit xxx 之后的。 暂存区 已经 git add xxx 进去，且未 git commit xxx 的 本地分支已经 git commit -m xxx 提交到本地分支的 git reset HEAD <路径/文件名> 取消工..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-05-23T08:58:49.000Z"}],["meta",{"property":"article:author","content":"哓番茄"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:modified_time","content":"2024-05-23T08:58:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-23T08:58:49.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哓番茄\\",\\"url\\":\\"https://lfange.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"工作区域","slug":"工作区域","link":"#工作区域","children":[{"level":3,"title":"取消工作区修改","slug":"取消工作区修改","link":"#取消工作区修改","children":[]}]},{"level":2,"title":"取消暂存区修改","slug":"取消暂存区修改","link":"#取消暂存区修改","children":[{"level":3,"title":"回滚到指定 commit","slug":"回滚到指定-commit","link":"#回滚到指定-commit","children":[]},{"level":3,"title":"git 强制拉取远程覆盖本地","slug":"git-强制拉取远程覆盖本地","link":"#git-强制拉取远程覆盖本地","children":[]}]},{"level":2,"title":"git tag","slug":"git-tag","link":"#git-tag","children":[]},{"level":2,"title":"git stash","slug":"git-stash","link":"#git-stash","children":[{"level":3,"title":"标识储藏记录","slug":"标识储藏记录","link":"#标识储藏记录","children":[]},{"level":3,"title":"查看存储","slug":"查看存储","link":"#查看存储","children":[]},{"level":3,"title":"取出储藏","slug":"取出储藏","link":"#取出储藏","children":[]},{"level":3,"title":"移除 stash","slug":"移除-stash","link":"#移除-stash","children":[]},{"level":3,"title":"查看指定 stash 的 diff","slug":"查看指定-stash-的-diff","link":"#查看指定-stash-的-diff","children":[]},{"level":3,"title":"从 stash 创建分支","slug":"从-stash-创建分支","link":"#从-stash-创建分支","children":[]}]},{"level":2,"title":"git restore","slug":"git-restore","link":"#git-restore","children":[]},{"level":2,"title":"git 同时推送 github 和 gitee","slug":"git-同时推送-github-和-gitee","link":"#git-同时推送-github-和-gitee","children":[]},{"level":2,"title":"git 忽略文件","slug":"git-忽略文件","link":"#git-忽略文件","children":[{"level":3,"title":"忽略未存在缓冲区的文件","slug":"忽略未存在缓冲区的文件","link":"#忽略未存在缓冲区的文件","children":[]},{"level":3,"title":"忽略已存在缓冲区的文件","slug":"忽略已存在缓冲区的文件","link":"#忽略已存在缓冲区的文件","children":[]},{"level":3,"title":"已经存在缓冲区，但是希望其以后从缓冲区移除","slug":"已经存在缓冲区-但是希望其以后从缓冲区移除","link":"#已经存在缓冲区-但是希望其以后从缓冲区移除","children":[]}]},{"level":2,"title":"重命名本地分支","slug":"重命名本地分支","link":"#重命名本地分支","children":[]},{"level":2,"title":"查看远程仓库地址","slug":"查看远程仓库地址","link":"#查看远程仓库地址","children":[{"level":3,"title":"修改远程仓库地址","slug":"修改远程仓库地址","link":"#修改远程仓库地址","children":[]}]},{"level":2,"title":"合并 commit","slug":"合并-commit","link":"#合并-commit","children":[]},{"level":2,"title":"Git-合并两个不同的仓库","slug":"git-合并两个不同的仓库","link":"#git-合并两个不同的仓库","children":[]},{"level":2,"title":"参考","slug":"参考","link":"#参考","children":[]}],"git":{"createdTime":1663830654000,"updatedTime":1716454729000,"contributors":[{"name":"a653398363","email":"653398363@qq.com","commits":8},{"name":"FanGe","email":"653398363@qq.com","commits":6},{"name":"lfange","email":"653398363@qq.com","commits":4},{"name":"哓番茄","email":"30554223+lfange@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":7.14,"words":2143},"filePathRelative":"tools/git.md","localizedDate":"2022年9月22日","excerpt":"","autoDesc":true}');export{u as comp,g as data};
