import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as s,a as t}from"./app-R7pVbBlq.js";const e={},p=t(`<h1 id="transition过渡-动画" tabindex="-1"><a class="header-anchor" href="#transition过渡-动画"><span>transition过渡&amp;动画</span></a></h1><p><a href="https://cn.vuejs.org/v2/guide/transitions.html" target="_blank" rel="noopener noreferrer">API</a></p><h2 id="使用" tabindex="-1"><a class="header-anchor" href="#使用"><span>使用</span></a></h2><p>需要设置动画的元素或组件要在外边包裹一个<code>&lt;transition&gt;</code>标签，设置自定义的<code>name</code>，vue会根据元素的切换（进入/离开）过程添加相应的css类名，你可以<strong>自由地使用css类名来设置css过渡&amp;动画</strong>。</p><h2 id="过渡的类名" tabindex="-1"><a class="header-anchor" href="#过渡的类名"><span>过渡的类名</span></a></h2><p>在进入/离开的过渡中，会有 6 个 class 切换。</p><p><strong>各类名的生命周期</strong></p><ul><li><p>进入</p><ul><li><code>v-enter</code> 只存在于第一帧</li><li><code>v-enter-active</code> 第一帧到最后一帧，结束后移除</li><li><code>v-enter-to</code> 第二帧到最后一帧，结束后移除</li></ul></li><li><p>离开</p><ul><li><code>v-leave</code> 只存在于第一帧</li><li><code>v-leave-active</code> 第一帧到最后一帧，结束后移除</li><li><code>v-leave-to</code> 第二帧到最后一帧，结束后移除</li></ul></li></ul><p>如果你使用一个没有<code>name</code>的<code>&lt;transition&gt;</code> ，则 <code>v-</code> 是这些类名的默认前缀。如果你使用了<code>name=&quot;fade&quot;</code>，那么 <code>v-</code> 前缀会替换为 <code>fade-</code>。</p><h3 id="组件中使用的示例" tabindex="-1"><a class="header-anchor" href="#组件中使用的示例"><span>组件中使用的示例</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>slide<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>add-song<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
             ...
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>    
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code> .add-song
    &amp;.slide-enter-active<span class="token punctuation">,</span> &amp;.slide-leave-active
      <span class="token property">transition</span><span class="token punctuation">:</span> all 0.3s
    &amp;.slide-enter<span class="token punctuation">,</span> &amp;.slide-leave-to
      <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translate3d</span><span class="token punctuation">(</span>100%<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vue中使用animate-css库" tabindex="-1"><a class="header-anchor" href="#vue中使用animate-css库"><span>vue中使用Animate.css库</span></a></h2><h3 id="自定义过渡类名" tabindex="-1"><a class="header-anchor" href="#自定义过渡类名"><span>自定义过渡类名</span></a></h3><p>我们可以通过以下 attribute 来自定义过渡类名：</p><ul><li><code>enter-class</code></li><li><code>enter-active-class</code></li><li><code>enter-to-class</code> (2.1.8+)</li><li><code>leave-class</code></li><li><code>leave-active-class</code></li><li><code>leave-to-class</code> (2.1.8+)</li></ul><p>他们的优先级高于普通的类名，这对于 Vue 的过渡系统和其他第三方 CSS 动画库，如 <a href="https://daneden.github.io/animate.css/" target="_blank" rel="noopener noreferrer">Animate.css</a>结合使用十分有用。</p><h2 id="使用animate-css库" tabindex="-1"><a class="header-anchor" href="#使用animate-css库"><span>使用Animate.css库</span></a></h2><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition</span>
      <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>custom-classes-transition<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">enter-active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animated tada<span class="token punctuation">&quot;</span></span>
      <span class="token attr-name">leave-active-class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>animated bounceOutRight<span class="token punctuation">&quot;</span></span>
      <span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>show<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>hello<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>按 <a href="https://github.com/daneden/animate.css" target="_blank" rel="noopener noreferrer">官方文档</a> 引入Animate.css库，再配合vue的自定义过渡类名，指定<code>enter-active-class</code>和<code>leave-active-class</code>的自定义类，两者都要有<code>animated</code>类，用于说明其使用的是Animate.css库，再根据需求定义另外一个<code>动画类名</code>。</p><p>动画类名：在 <a href="https://daneden.github.io/animate.css/" target="_blank" rel="noopener noreferrer">Animate官网</a> 获取。</p><h2 id="transition-group列表过渡" tabindex="-1"><a class="header-anchor" href="#transition-group列表过渡"><span>transition-group列表过渡</span></a></h2><h3 id="列表的进入-离开过渡" tabindex="-1"><a class="header-anchor" href="#列表的进入-离开过渡"><span>列表的进入/离开过渡</span></a></h3><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>transition-group</span> <span class="token attr-name">tag</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ul<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!--tag转为ul--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">v-for</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item in list<span class="token punctuation">&quot;</span></span> <span class="token attr-name">:key</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span> <span class="token comment">&lt;!--子元素要有key--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>transition-group</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>注意</strong>：列表元素一定要有<code>key</code></p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.v-enter,.v-leave-to</span><span class="token punctuation">{</span>
  <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
  <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateX</span><span class="token punctuation">(</span>30px<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.v-enter-active,.v-leave-active</span><span class="token punctuation">{</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> all 1s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="列表的排序过渡" tabindex="-1"><a class="header-anchor" href="#列表的排序过渡"><span>列表的排序过渡</span></a></h2><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.v-move</span> <span class="token punctuation">{</span>
  <span class="token property">transition</span><span class="token punctuation">:</span> transform 1s<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28),c=[p];function l(o,i){return n(),s("div",null,c)}const d=a(e,[["render",l],["__file","animation.html.vue"]]),m=JSON.parse('{"path":"/Front/Vue/basic/animation.html","title":"transition过渡&动画","lang":"zh-CN","frontmatter":{"description":"API 使用 需要设置动画的元素或组件要在外边包裹一个<transition>标签，设置自定义的name，vue会根据元素的切换（进入/离开）过程添加相应的css类名，你可以自由地使用css类名来设置css过渡&动画。","head":[["meta",{"property":"og:url","content":"https://lfange.github.io/Front/Vue/basic/animation.html"}],["meta",{"property":"og:site_name","content":"哓番茄"}],["meta",{"property":"og:title","content":"transition过渡&动画"}],["meta",{"property":"og:description","content":"API 使用 需要设置动画的元素或组件要在外边包裹一个<transition>标签，设置自定义的name，vue会根据元素的切换（进入/离开）过程添加相应的css类名，你可以自由地使用css类名来设置css过渡&动画。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2022-08-24T13:03:32.000Z"}],["meta",{"property":"article:author","content":"哓番茄"}],["meta",{"property":"article:modified_time","content":"2022-08-24T13:03:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"transition过渡&动画\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2022-08-24T13:03:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"哓番茄\\",\\"url\\":\\"https://lfange.github.io/\\"}]}"]]},"headers":[{"level":2,"title":"使用","slug":"使用","link":"#使用","children":[]},{"level":2,"title":"过渡的类名","slug":"过渡的类名","link":"#过渡的类名","children":[{"level":3,"title":"组件中使用的示例","slug":"组件中使用的示例","link":"#组件中使用的示例","children":[]}]},{"level":2,"title":"vue中使用Animate.css库","slug":"vue中使用animate-css库","link":"#vue中使用animate-css库","children":[{"level":3,"title":"自定义过渡类名","slug":"自定义过渡类名","link":"#自定义过渡类名","children":[]}]},{"level":2,"title":"使用Animate.css库","slug":"使用animate-css库","link":"#使用animate-css库","children":[]},{"level":2,"title":"transition-group列表过渡","slug":"transition-group列表过渡","link":"#transition-group列表过渡","children":[{"level":3,"title":"列表的进入/离开过渡","slug":"列表的进入-离开过渡","link":"#列表的进入-离开过渡","children":[]}]},{"level":2,"title":"列表的排序过渡","slug":"列表的排序过渡","link":"#列表的排序过渡","children":[]}],"git":{"createdTime":1661245911000,"updatedTime":1661346212000,"contributors":[{"name":"FanGe","email":"653398363@qq.com","commits":4}]},"readingTime":{"minutes":1.92,"words":575},"filePathRelative":"Front/Vue/basic/animation.md","localizedDate":"2022年8月23日","excerpt":"\\n<p><a href=\\"https://cn.vuejs.org/v2/guide/transitions.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">API</a></p>\\n<h2>使用</h2>\\n<p>需要设置动画的元素或组件要在外边包裹一个<code>&lt;transition&gt;</code>标签，设置自定义的<code>name</code>，vue会根据元素的切换（进入/离开）过程添加相应的css类名，你可以<strong>自由地使用css类名来设置css过渡&amp;动画</strong>。</p>\\n","autoDesc":true}');export{d as comp,m as data};
