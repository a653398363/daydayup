{"version":3,"file":"vue.js","sources":["../src/observe/dep.js","../src/utils/nextTick.js","../src/observe/watcher.js","../src/observe/array.js","../src/observe/index.js","../src/initState.js","../src/compiler/parse.js","../src/compiler/generate.js","../src/compiler/index.js","../src/vnode/patch.js","../src/liftcycle.js","../src/utils/index.js","../src/init.js","../src/vnode/index.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["let id = 0\r\nclass Dep {\r\n  constructor() {\r\n    this.subs = []\r\n    this.id = id++\r\n  }\r\n  //收集watcher \r\n  depend () {\r\n\r\n    //我们希望water 可以存放 dep\r\n    //实现双休记忆的，让watcher 记住\r\n    //dep同时，让dep也记住了我们的watcher\r\n    Dep.targer.addDep(this)\r\n    // this.subs.push(Dep.targer) // id：1 记住他的dep\r\n  }\r\n  addSub (watcher) {\r\n    this.subs.push(watcher)\r\n  }\r\n  //更新\r\n  notify () {\r\n    // console.log(Dep.targer)\r\n    this.subs.forEach(watcher => {\r\n      watcher.updata()\r\n    })\r\n  }\r\n}\r\n\r\n//dep  和 watcher 关系\r\nDep.targer = null;\r\nexport function pushTarget (watcher) {  //添加 watcher\r\n\r\n  Dep.targer = watcher //保留watcher\r\n  // console.log(Dep.targer)\r\n}\r\nexport function popTarget () {\r\n  Dep.targer = null //将变量删除\r\n}\r\nexport default Dep\r\n //多对多的关系\r\n //1. 一个属性有一个dep ,dep 作用：用来收集watcher的\r\n //2. dep和watcher 关系：(1)dep 可以存放多个watcher  (2):一个watcher可以对应多个dep"," let callback = []\r\n let pending = false\r\n function flush(){\r\n    callback.forEach(cb =>cb())\r\n    pending =false\r\n }\r\n let timerFunc\r\n //处理兼容问题\r\n if(Promise){\r\n    timerFunc = ()=>{\r\n        Promise.resolve().then(flush) //异步处理\r\n    }\r\n }else if(MutationObserver){ //h5 异步方法 他可以监听 DOM 变化 ，监控完毕之后在来异步更新\r\n   let observe = new MutationObserver(flush)\r\n   let textNode = document.createTextNode(1) //创建文本\r\n   observe.observe(textNode,{characterData:true}) //观测文本的内容\r\n   timerFunc = ()=>{\r\n    textNode.textContent = 2\r\n   }\r\n }else if(setImmediate){ //ie\r\n    timerFunc = ()=>{\r\n        setImmediate(flush) \r\n    }\r\n }\r\n export function nextTick(cb){\r\n     // 1vue 2\r\n    //  console.log(cb)\r\n     //列队 [cb1,cb2]\r\n     callback.push(cb)\r\n     //Promise.then()  vue3\r\n     if(!pending){\r\n         timerFunc()   //这个方法就是异步方法 但是 处理兼容问题\r\n         pending = true\r\n     }\r\n }","import { pushTarget, popTarget } from \"./dep\";\r\nimport { nextTick } from \"../utils/nextTick\";\r\n\r\n//为什么封装成一个类 ，方便我们的扩展\r\nlet id = 0; //全局的\r\nclass Watcher {\r\n  //vm 实例\r\n  //exprOrfn vm._update(vm._render()) \r\n  constructor(vm, exprOrfn, cb, options) {\r\n    // 1.创建类第一步将选项放在实例上\r\n    this.vm = vm;\r\n    this.exprOrfn = exprOrfn;\r\n    this.cb = cb;\r\n    this.options = options;\r\n    this.value = null;\r\n    // 2. 每一组件只有一个watcher 他是为标识\r\n    this.id = id++\r\n    // 3.判断表达式是不是一个函数\r\n    this.deps = []  //watcher 记录有多少dep 依赖\r\n    this.depsId = new Set()\r\n    if (typeof exprOrfn === 'function') {\r\n      this.getter = exprOrfn\r\n    } else {\r\n      this.getter = function () {\r\n        let obj = vm\r\n        if (exprOrfn.indexOf('.') !== -1) {\r\n          const argus = exprOrfn.split('.')\r\n          for (let i = 0; i < argus.length; i++) {\r\n            obj = obj[argus[i]]\r\n          }\r\n        }\r\n        return obj\r\n      }\r\n    }\r\n    // 4.执行渲染页面\r\n    this.get()\r\n  }\r\n  addDep (dep) {\r\n    //去重  判断一下 如果dep 相同我们是不用去处理的\r\n    let id = dep.id\r\n    //  console.log(dep.id)\r\n    if (!this.depsId.has(id)) {\r\n      this.deps.push(dep)\r\n      this.depsId.add(id)\r\n      //同时将watcher 放到 dep中\r\n      // console.log(666)\r\n      dep.addSub(this)\r\n    }\r\n    // 现在只需要记住  一个watcher 有多个dep,一个dep 有多个watcher\r\n    //为后面的 component \r\n  }\r\n  run () {\r\n    this.get()\r\n  }\r\n  get () {\r\n    // Dep.target = watcher\r\n    pushTarget(this) //当前的实例添加\r\n    let old = this.value\r\n    this.value = this.getter()// 渲染页面  render()   with(wm){_v(msg,_s(name))} ，取值（执行get这个方法） 走劫持方法\r\n    this.cb(this.value, old)\r\n    popTarget(); //删除当前的实例 这两个方法放在 dep 中\r\n  }\r\n  //问题：要把属性和watcher 绑定在一起   去html页面\r\n  // (1)是不是页面中调用的属性要和watcher 关联起来\r\n  //方法\r\n  //（1）创建一个dep 模块\r\n  updata () { //三次\r\n    //注意：不要数据更新后每次都调用 get 方法 ，get 方法回重新渲染\r\n    //缓存\r\n    // this.get() //重新渲染\r\n    queueWatcher(this)\r\n  }\r\n}\r\nlet queue = [] // 将需要批量更新的watcher 存放到一个列队中\r\nlet has = {}\r\nlet pending = false\r\nfunction flushWatcher () {\r\n  queue.forEach(item => { item.run(), item.cb() })\r\n  queue = []\r\n  has = {}\r\n  pending = false\r\n}\r\nfunction queueWatcher (watcher) {\r\n  let id = watcher.id // 每个组件都是同一个 watcher\r\n  //    console.log(id) //去重\r\n  if (has[id] == null) {//去重\r\n    //列队处理\r\n    queue.push(watcher)//将wacher 添加到列队中\r\n    has[id] = true\r\n    // 用户触发多次，只触发一个\r\n    if (!pending) {\r\n      //异步：等待同步代码执行完毕之后，再执行\r\n      // setTimeout(()=>{\r\n      //   queue.forEach(item=>item.run())\r\n      //   queue = []\r\n      //   has = {}\r\n      //   pending = false\r\n      // },0)\r\n      nextTick(flushWatcher) //  nextTick相当于定时器\r\n      pending = true\r\n    }\r\n  }\r\n}\r\n\r\nfunction parsePath (path, vm) {\r\n  const segments = path.split('.')\r\n  return function (obj) {\r\n    for (let i = 0; i < segments.length; i++) {\r\n      obj = obj[i]\r\n    }\r\n    console.log('执行渲染页面', obj);\r\n    console.log('parsePath', obj);\r\n    return obj\r\n  }\r\n}\r\n\r\nexport default Watcher\r\n\r\n//nextTick 原理\r\n\r\n//优化\r\n//1 创建nextTick 方法","//函数劫持\r\n// 1 获取到数组原型上的方法（原来的方法）\r\nlet oldArrayProtoMethods = Array.prototype;\r\n\r\n//2继承一下\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(item => {\r\n    //进行函数劫持 push\r\n    arrayMethods[item] = function (...args) { //我自己的逻辑\r\n        //调用原来数组的方法\r\n        // console.log('数组被调用')\r\n        //当调用数组我们劫持后的这个7个方法 页面应该更新\r\n        //我们要知道数组对应那个dep\r\n        let result = oldArrayProtoMethods[item].apply(this, args)//this 就是  observer里的value\r\n        // 数组添加对象情况 ，给添加的对象，进行劫持\r\n        let inserted; // arr.push({a:1})\r\n        switch (item) {\r\n            case 'push': // arr.push({a:1},{b:2})\r\n            case 'unshift': // 这里是两个追加   追加的内容可能是对象类型，应该被再次进行 劫持\r\n                inserted = args\r\n                break;\r\n            case \"splice\":\r\n                args.splice(2); // arr.splice(0,1,{a:4})\r\n                break;\r\n        }\r\n        //判断一下 {}\r\n        let ob = this.__ob__\r\n        if(inserted) ob.obserArray(inserted); //给数组新增的值也要进行观测 {}\r\n        ob.dep.notify() //通知数组更新\r\n        return result\r\n    }\r\n})\r\n\r\n\r\n","import { arrayMethods } from './array'\r\nimport Dep from './dep';\r\nclass observe {\r\n  constructor(value) {\r\n    //1 给所有的对象类型添加一个dep 属性\r\n    this.dep = new Dep() // 注意 （1）{}  (2) [] 不是给里面属性添加dep\r\n\r\n    //使用defineProperty 重新定义属性 作用用来观测数据已经劫持过来\r\n    //判断一个对象是否被观察过看他有没有 __ob__这个属性\r\n    Object.defineProperty(value, \"__ob__\", {\r\n      enumerable: false, //不能枚举\r\n      configurable: false, //控制属性描述符是否能改变\r\n      value: this\r\n    })\r\n\r\n    if (Array.isArray(value)) { //注意对数组中的数据进行劫持 方法 劫持 修改数据的方法\r\n      //我希望调用push  shift unshift splice sort reverse pop 这七个方法，那么我们就可以对\r\n      //你这个方法进行劫持\r\n      // 函数劫持，切片编程 []._ \r\n      value.__proto__ = arrayMethods // 对象__proto__属性：\r\n      //监听数组中的值时对象\r\n      this.obserArray(value)\r\n    } else {\r\n      this.walk(value)\r\n    }\r\n\r\n  }\r\n  obserArray (value) {\r\n    //进行循环\r\n    value.forEach(item => {\r\n      Observer(item)\r\n    })\r\n  }\r\n  walk (data) { //数据是对象的的{a:{b:{}}}\r\n    //循环\r\n    let keys = Object.keys(data) //获取对象的key  注意这个key 只是 对象的最外层的\r\n    console.log('keyskeyskeys', keys);\r\n    keys.forEach(item => {\r\n      defineReactive(data, item, data[item]) //Vue.util 中有的\r\n    })\r\n  }\r\n}\r\n//对数据进行劫持\r\nfunction defineReactive (data, key, value) {\r\n  // Object.defineProperty\r\n  let chilidDep = Observer(value) //获取到数组对应的dep \r\n\r\n  //1给我们的每个属性添加一个dep\r\n  let dep = new Dep();\r\n  //2将dep 存放起来，当页面取值时，说明这个值用来渲染，在将这个watcher和这个属性对应起来\r\n  Object.defineProperty(data, key, {\r\n    get () { //依赖收集\r\n      // console.log('获取数据', data, key, value)\r\n      if (Dep.targer) { //让这个属性记住这个watcher\r\n        dep.depend()\r\n        //3当我们对arr取值的时候 我们就让数组的dep记住这个watcher\r\n        if (chilidDep) {\r\n          chilidDep.dep.depend() //数组收集watcher\r\n        }\r\n      }\r\n      //检测一下 dep\r\n      //获取arr的值，会调用get 方法 我希望让当前数组记住这个渲染watcher\r\n\r\n      // console.log(dep.subs)\r\n      return value\r\n    },\r\n    set (newValue) { //依赖更新\r\n      //注意设置的值和原来的值是一样的\r\n      // console.log('设置值', data, key, value)\r\n      if (newValue == value) return;\r\n      Observer(newValue) //如果用户将值改为对象继续监控\r\n      value = newValue\r\n      dep.notify()\r\n    }\r\n  })\r\n}\r\nexport function Observer (data) {\r\n  // data 我们需要进行判断 typeof  object null\r\n  //不能不是对象 并且不是null\r\n  if (typeof data !== 'object' || data == null) {\r\n    return;\r\n  }\r\n  //判断用户是否已经观测\r\n  if (data.__ob__) {\r\n    return data;\r\n  }\r\n  //对这个是数据进行劫持 我们通过一个类\r\n  return new observe(data)\r\n}","import Watcher from './observe/watcher'\r\nimport { Observer } from \"./observe/index.js\";\r\nimport { nextTick } from \"./utils/nextTick.js\";\r\n\r\nexport function initState (vm) {\r\n  // console.log(vm)\r\n  //\r\n  const opts = vm.$options\r\n  if (opts.data) {\r\n    initData(vm);\r\n  }\r\n  if (opts.props) {\r\n    initProps(vm);\r\n  }\r\n  if (opts.watch) {\r\n    initWatch(vm);\r\n  }\r\n\r\n  if (opts.computed) {\r\n    initComputed(vm);\r\n  }\r\n  if (opts.methods) {\r\n    initMethod(vm);\r\n  }\r\n}\r\n\r\nfunction initComputed (vm) {\r\n\r\n}\r\nfunction initMethod (vm) {\r\n\r\n}\r\n//实现代理  将data中属性代理到 vm (this)\r\nfunction proxy (vm, data, key) {\r\n  Object.defineProperty(vm, key, {\r\n    get () {\r\n      return vm[data][key]// vm._data.a\r\n    },\r\n    set (newValue) {\r\n      vm[data][key] = newValue\r\n    }\r\n  })\r\n}\r\nfunction initData (vm) { //数据进行初始化\r\n  let data = vm.$options.data\r\n  data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n\r\n  //数据的劫持方案对象Object.defineProperty\r\n  //将data中的属性代理到vm  上\r\n  for (let key in data) {\r\n    proxy(vm, \"_data\", key)\r\n  }\r\n  Observer(data)\r\n}\r\nfunction initProps (vm) {\r\n\r\n}\r\nfunction initWatch (vm) {\r\n  //1 获取watch\r\n  let watch = vm.$options.watch\r\n  console.log(watch)\r\n  //2 遍历  { a,b,c}\r\n  for (let key in watch) {\r\n    //2.1获取 他的属性对应的值 （判断)\r\n    let handler = watch[key] //数组 ，对象 ，字符，函数\r\n    if (Array.isArray(handler)) {//数组  []\r\n      hendler.forEach(item => {\r\n        createrWatcher(vm, key, item)\r\n      })\r\n    } else {//对象 ，字符，函数\r\n      //3创建一个方法来处理\r\n      createrWatcher(vm, key, handler)\r\n    }\r\n  }\r\n}\r\n\r\n//vm.$watch(()=>{return 'a'}) // 返回的值就是  watcher 上的属性 user = false\r\n//格式化处理\r\nfunction createrWatcher (vm, exprOrfn, handler, options) {\r\n  //3.1 处理handler\r\n  if (typeof handler === 'object') {\r\n    options = handler; //用户的配置项目\r\n    handler = handler.handler;//这个是一个函数\r\n  }\r\n  if (typeof handler === 'string') {// 'aa'\r\n    handler = vm[handler] //将实例行的方法作为 handler 方法代理和data 一样\r\n  }\r\n  //其他是 函数\r\n  //watch 最终处理 $watch 这个方法\r\n  return vm.$watch(exprOrfn, handler, options)\r\n}\r\n\r\nexport function stateMixin (vm) {\r\n  //列队 :1就是vue自己的nextTick  2用户自己的\r\n  vm.prototype.$nextTick = function (cb) { //nextTick: 数据更新之后获取到最新的DOM\r\n    //  console.log(cb)\r\n    nextTick(cb)\r\n  }\r\n\r\n\r\n  vm.prototype.$watch = function (exprOrfn, handler, options) { //上面格式化处理\r\n\r\n    console.log('exprOrfn', exprOrfn, handler, options)\r\n    //实现watch 方法 就是new  watcher //渲染走 渲染watcher $watch 走 watcher  user false\r\n    //\r\n    const watch = new Watcher(this, exprOrfn, handler, options)\r\n    if (options.immediate) {\r\n      handler.call(this)\r\n    }\r\n    // const watch = new Watcher(vm, exprOrfn, handler, options)\r\n    //  if(options.immediate){\r\n    //     handler() //如果有这个immediate 立即执行\r\n    //  }\r\n  }\r\n\r\n}\r\n\r\n//nextTick 原理\r\n\r\n// watch 基本使用  init\r\n","\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;   // 小a-z 大A到Z 标签名称： div  span a-aa\r\n//?: 匹配不捕获\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 捕获这种 <my:xx> </my:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n//属性匹配   <div id=\"atts\"></div>  // aa = \"aa\" | aa = 'aa'\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  <div></div>  <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{xx}}  默认的 双大括号\r\n//vue3 一摸一样的\r\n\r\n//通过数据结构 树，栈  变成 ast语法树\r\n//创建树\r\nfunction createASTELement (tagName, attrs) {\r\n  return {\r\n    tag: tagName, //标签名称\r\n    type: 1, //元素类型\r\n    children: [],// 孩子列表\r\n    attrs,   //属性集合\r\n    parent: null  // 父元素\r\n  }\r\n}\r\n//<div>hello {{name}} <span>world</span></div>\r\n//创建3个方法\r\nlet root; //判断是否是根元素\r\nlet currentParent; //这个元素的当前父亲元素\r\n//4 检测 标签是否符合预期 <div><span></span></div>   栈的方式来解决这个： [div,span]\r\nlet stack = []\r\nfunction start (tagName, attrs) { //开始的标签\r\n  // console.log(tagName, attrs, '--开始--')\r\n  let element = createASTELement(tagName, attrs)\r\n  //注意：是不是根元素\r\n  if (!root) {\r\n    root = element\r\n  }\r\n  currentParent = element//当前解析的标签保存起来\r\n  stack.push(element)\r\n}\r\n//<div>hello<span></span> <p></p></div> // [div,span]\r\nfunction end (tagName) { //结束的标签\r\n  // console.log(tagName, '----结束---')\r\n  let element = stack.pop() //取出 栈中的最后一个\r\n  currentParent = stack[stack.length - 1]\r\n  // debugger\r\n  if (currentParent) { //在闭合时可以知道这个标签的父亲说谁\r\n    element.parent = currentParent\r\n    currentParent.children.push(element) //将儿子放进去\r\n  }\r\n}\r\n\r\nfunction chars (text) { //文本\r\n  // console.log(text, '---文本---')\r\n  //注意：空格\r\n  text = text.replace(/\\s/g, '')\r\n  if (text) {\r\n    currentParent.children.push({\r\n      type: 3,\r\n      text\r\n    })\r\n  }\r\n}\r\n\r\n\r\nexport function parseHTML (html) {\r\n  //1解析标签  <div id=\"my\">hello {{name}} <span>world</span></div>\r\n  console.log('html', html);\r\n  while (html) { // 只要html 不为空字符串就一直执行下去\r\n    let textEnd = html.indexOf('<');\r\n    if (textEnd === 0) {\r\n      //肯定是标签\r\n      // console.log('开始', html)\r\n      //这个标签是开始标签还是结束标签\r\n      const startTagMatch = parseStartTag() //开始标签匹配结果\r\n      if (startTagMatch) {\r\n        start(startTagMatch.tagName, startTagMatch.attrs)\r\n        continue; //中断（循环中）的一个迭代，如果发生指定的条件。然后继续循环中的下一个迭代。\r\n      }\r\n      //处理结束标签\r\n      const endTagMatch = html.match(endTag)\r\n      if (endTagMatch) {\r\n        advance(endTagMatch[0].length)\r\n        end(endTagMatch[1])\r\n        continue;\r\n      }\r\n\r\n      // console.log(html)\r\n    }\r\n    //文本 \r\n    let text;\r\n    if (textEnd > 0) {\r\n      // console.log(textEnd)\r\n      text = html.substring(0, textEnd)\r\n    }\r\n    if (text) {//处理文本\r\n      advance(text.length)\r\n      chars(text)//获取到文本\r\n    }\r\n    // console.log(html)\r\n    // break //添加break 不然死循环\r\n  }\r\n  //删除标签\r\n  function advance (n) { //将字符串进行截取操作，再跟新到html\r\n    html = html.substring(n)\r\n\r\n  }\r\n  //匹配 开头的标签\r\n  function parseStartTag () {\r\n    const start = html.match(startTagOpen)// 1：成功结果 2:false\r\n    if (start) {//成功\r\n      // console.log(start)\r\n      //组合ast语法树\r\n      const match = {\r\n        tagName: start[1],\r\n        attrs: []\r\n      }\r\n      // console.log(match)\r\n      //删除开始标签\r\n      advance(start[0].length)\r\n      // console.log(html)\r\n      //属性,注意 可能又多个 属性  遍历\r\n      // 1：循环\r\n      // 2: 注意：1闭合标签 <div/>  , 2这个标签属性\r\n      let end;\r\n      let attr;\r\n      while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n        // console.log(attr) //属性\r\n        match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n        // console.log(match)\r\n        //ast语法树获取，删除\r\n        advance(attr[0].length) //删除属性 （没有了）\r\n        //    break;\r\n      }\r\n      if (end) {\r\n        advance(end[0].length) //删除 >\r\n        // console.log(end)\r\n        return match\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  // 最后返回  root \r\n  return root\r\n}","//思路\r\n//  <div id=\"app\" style=\"color:red\"> hello {{name}}<p>hello1</P> </div>\r\n//变成 render()\r\n// render(){\r\n//      return _c(\"div\",{id:\"app\",style:{color:\"res\"}},_v('hello'+_s(name)),_c('p'，null,_v('hello1)))\r\n//    }\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //注意正则匹配 lastIndex\r\n// 处理元素的属性\r\nfunction genProps(attrs) {\r\n    //处理属性\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        //注意;   style：\"color:red;font-size: 20px\r\n        if (attr.name === 'style') {\r\n            let obj = {} //对样式进行特殊处理\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj //\r\n        }\r\n        //其他  'id:app',注意最后会多个属性化 逗号\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`  // -1为最后一个字符串的位置  演示一下 \r\n    // let reg =/a/g    reg.test('ad') false  \r\n}\r\n//判断是否又儿子\r\nfunction genChildren(el) {\r\n    const children = el.children\r\n    if (children) { //将所有\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n\r\n\r\n}\r\nfunction gen(node) { //获取到的元素\r\n    //注意 是什么类型  文本   div\r\n    if (node.type === 1) {\r\n        return generate(node) //生成元素节点的字符串\r\n    } else {\r\n        let text = node.text // 获取文本  注意  普通的文本  hello{{name}}?{{num}}\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`  // _v(html)  _v('hello'+_s(name))\r\n        }\r\n        let tokens = [] //存放每一段的代码\r\n        let lastIndex = defaultTagRE.lastIndex = 0;//如果正则是全局模式 需要每次使用前变为0\r\n        let match;// 每次匹配到的结果  exec 获取 {{name}}\r\n        while (match = defaultTagRE.exec(text)) {\r\n            // console.log(match) 获取到 又{{}}  元素\r\n            //  console.log(match)\r\n           let index = match.index;// 保存匹配到的索引\r\n          // hello{{name}} ? {{num}}\r\n            if (index > lastIndex) {\r\n               tokens.push(JSON.stringify(text.slice(lastIndex,index))) //添加的是文本\r\n            //    console.log(tokens)\r\n            }\r\n            //{{name}} 添加{{}} aa\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n             lastIndex = index+match[0].length //最后 {{}} 索引位置\r\n        }\r\n        if(lastIndex<text.length){\r\n           tokens.push(JSON.stringify(text.slice(lastIndex))) \r\n        }\r\n        //最终返回出去\r\n\r\n        return `_v(${tokens.join(\"+\")})`\r\n    }\r\n\r\n\r\n}\r\n//语法层面的转移\r\nexport function generate(el) {\r\n    // console.log(el)\r\n    let children = genChildren(el)\r\n    //方法 拼接字符串  源码也是这样操作 [{}]    ${el.attrs.length?`{style:{color:red}}`:'undefined'}\r\n    let code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'}${\r\n        children ? `,${children}` : ''\r\n        })`\r\n    return code\r\n}","import { parseHTML } from \"./parse\";\r\nimport { generate } from \"./generate\";\r\n\r\n\r\nexport function compileToFunction (template) { //编译模板\r\n  let ast = parseHTML(template)\r\n  console.log('parseHTML ast', ast);\r\n  //2通过这个棵树重新的生成代码  render\r\n  let code = generate(ast) //对象\r\n  //  console.log(code)\r\n  //3将字符传变成函数\r\n  //  let render = new Function(code) //new Function()创建函数的语法： es6\r\n  let render = new Function(`with(this){return ${code}}`) //通过with 来进行取值，稍后调用\r\n  //render 函数就可以通过改变this 让这个函数内部取到结果？\r\n  //注意  code 中的变量  name 那里的  ，是不是this\r\n  //  console.log(render)\r\n  return render\r\n  //后面渲染我们的节点 ，再放到页面上去\r\n}\r\n\r\n// //with   添加一个作用域\r\n// let obj ={a:1,b:2}\r\n// with(obj ){\r\n//       console.log(a,b)\r\n// }","export function patch(oldVnode, Vnode) {\r\n    //原则  将虚拟节点转换成真实的节点\r\n    // console.log(oldVnode, Vnode)  //注意oldVnode 需要在加载 mount 添加上去  vm.$el= el\r\n\r\n    let el = createELm(Vnode) // 产生一个新的DOM\r\n    let parentElm = oldVnode.parentNode //获取老元素（app） 父亲 ，body\r\n    //   console.log(oldVnode)\r\n    //  console.log(parentElm)\r\n    //插入\r\n    parentElm.insertBefore(el, oldVnode.nextSibling) //当前真实的元素插入到app 的后面\r\n    parentElm.removeChild(oldVnode) //删除老节点\r\n    //重新赋值\r\n      return  el\r\n}\r\n\r\nfunction createELm(vnode) {\r\n    let { tag, children, key, data, text } = vnode\r\n    //注意\r\n    if (typeof tag === 'string') { //创建元素 放到 vnode.el上\r\n        vnode.el = document.createElement(tag)  //创建元素 \r\n        //有儿子\r\n        children.forEach(child => {\r\n            // 递归 儿子 将儿子渲染后的结果放到 父亲中\r\n            vnode.el.appendChild(createELm(child))\r\n        })\r\n    } else { //文本\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el //新的dom\r\n}\r\n\r\n//思路 ：虚拟dom 变成正式的dom \r\n// 1获取到真实的dom  虚拟daom\r\n// 2.将虚拟dom变成正式dom\r\n// 3.获取到旧dom的父亲元素\r\n// 4.将新的dom 方法 app 后面\r\n// 5.删除 就的元素","import { patch } from './vnode/patch'\r\nimport Watcher from './observe/watcher'\r\nexport function mountComponent (vm, el) {\r\n  //调用render方法去渲染 el属性\r\n\r\n  //方法：先调用render方法创建虚拟节点，在将虚拟节点渲染到页面上\r\n  //源码方式\r\n  callHook(vm, \"beforeMount\")\r\n  //挂载  重新封装一下 变成一个类，这个类他是响应式变的，数据改变了我们就调用这个方法\r\n  //   vm._update(vm._render()) \r\n  let updateComponent = () => {\r\n    vm._update(vm._render())\r\n  }\r\n  //这个watcher 是用于渲染的 目前没有任何功能 ，updataComponent \r\n  new Watcher(vm, updateComponent, () => {\r\n    callHook(vm, 'updated')\r\n  }, true) //Watcher 有什么用  和之前差不多，1把实例缠绕进去 ,2在给他传入一个方法\r\n  //true 标识渲染的  ，（）=》{} 跟新逻辑\r\n  callHook(vm, \"mounted\")\r\n}\r\n\r\n//创建这两个方法\r\nexport function liftcycleMixin (Vue) { //这个方法在那个地方使用的\r\n  Vue.prototype._update = function (vnode) {\r\n    //   console.log(vnode)\r\n    const vm = this\r\n    vm.$el = patch(vm.$el, vnode) //获取到最新的渲染值\r\n  }\r\n}\r\n\r\n//生命周期初始化\r\nexport function callHook (vm, hook) {\r\n  const handlers = vm.$options[hook] // created = [a1,a2,a3]\r\n  if (handlers) {\r\n    for (let i = 0; i < handlers.length; i++) {\r\n      handlers[i].call(vm); //改变生命周期中的this\r\n    }\r\n  }\r\n}\r\n//怎么调用\r\n//  callHook(vm,\"created\")\r\n","\r\nexport const HOOKS = [\r\n  \"beforeCreate\",\r\n  \"created\",\r\n  \"beforeMount\",\r\n  \"mounted\",\r\n  \"beforeUpdate\",\r\n  \"updated\",\r\n  \"beforeDestory\",\r\n  \"destroyed\"\r\n]\r\n// 策略模式\r\nconst strats = {}\r\nstrats.data = function (parentVal, childVal) { //data合并\r\n  return childVal //这里应该有合并data 方法\r\n}\r\n// strats.computed =function(){\r\n// }\r\n// strats.methods = function(){}\r\n// strats.watch =function(){\r\n// }\r\n\r\nfunction mergeHook (parentVal, childVal) { //生命周期的合并\r\n  // console.log(parentVal) [a] b [a,b]\r\n  if (childVal) {\r\n    if (parentVal) {\r\n      return parentVal.concat(childVal);//爸爸和儿子进行并接\r\n    } else {\r\n      return [childVal]  // {}{created:function} // [created]\r\n    }\r\n  } else {\r\n    return parentVal  //不用合并 采用父亲的\r\n  }\r\n}\r\n//遍历这个hooks\r\nHOOKS.forEach(hooks => {\r\n  strats[hooks] = mergeHook\r\n})\r\n// Vue.options ={}    Vue.mixin({})   {created:[a,b,组件上的]}\r\nexport function mergeOptions (parent, child) {\r\n  const options = {}\r\n  // console.log(parent) {created:[a]}\r\n  //遍历父亲：可能是父亲有，儿子没有\r\n  for (let key in parent) { //父亲和儿子都有在这里进行处理\r\n    mergeField(key)\r\n  }\r\n  //儿子有父亲没有\r\n  for (let key in child) { //将儿子多的赋值到父亲上\r\n    if (!parent.hasOwnProperty(key)) {\r\n      mergeField(key)\r\n    }\r\n  }\r\n  function mergeField (key) { //合并字段 created\r\n    //根据key  不同的策略进行合并\r\n    // 比如 {key:parent[key] child[key]}\r\n    //注意 我们这个key可能是一个钩子函数\r\n    // console.log(child)\r\n    if (strats[key]) { // strats.created = \r\n      options[key] = strats[key](parent[key], child[key]) //[a]\r\n    } else {\r\n      //默认合并策略\r\n      options[key] = child[key]\r\n    }\r\n    //(1) {created:[a,b]} \r\n  }\r\n  return options\r\n}","//初始化\r\nimport { initState } from './initState'\r\nimport { compileToFunction } from './compiler/index'\r\nimport { mountComponent, callHook } from './liftcycle'\r\nimport { mergeOptions } from './utils/index';\r\nexport function initMixin (Vue) {\r\n  //面试题  全局组件和局部组件的区别\r\n  //局部组件是不是在等前的组件中可以使用\r\n  //全局组件在项目中任何地方都可以使用 原因 在组件初始化的时候 合并进来了\r\n\r\n  Vue.prototype._init = function (options) {\r\n    //el 显示页面\r\n    //data  数据初始化\r\n    //\r\n    // console.log(options)\r\n    const vm = this\r\n    // 注意 ：组件中都有一个 vue\r\n    vm.$options = mergeOptions(Vue.options, options) // 需要将用户自定义的options 合并 谁和谁合并\r\n    //初始化 状态 （将数据做一个初始化的劫持，当我改变数据时应跟新视图）\r\n    //vue组件中有很多状态 data,props watch computed\r\n    console.log('VmOptions', vm.$options)\r\n    callHook(vm, \"beforeCreate\")\r\n    initState(vm) //初始化状态\r\n    callHook(vm, \"created\")\r\n    //vue核心特点  响应式数据原理\r\n    //vue 是一个什么样的框架 mvvm\r\n    //数据变化视图更新，视图变化数据会被影响（mvvm） 不能跳过数据去更新视图，$ref   \r\n\r\n    // 如果当前 有el 属性说明要渲染模块\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  //创建 $mount 方法\r\n  Vue.prototype.$mount = function (el) {\r\n    //进行挂载操作\r\n    const vm = this;\r\n    const options = vm.$options //\r\n    // console.log(el)\r\n    //获取元素\r\n    el = document.querySelector(el);\r\n    vm.$el = el\r\n    //现在我们就希望渲染页面\r\n    //1: 如果有render  渲染render\r\n    if (!options.render) { // 没有\r\n      let template = options.template\r\n      //1.1 需要判断有没有template\r\n      if (!template && el) {\r\n        //1.2 获取el 内容\r\n        //DOM接口的outerHTML属性获取描述元素（包括其后代）的序列化HTML片段。它也可以设置为用从给定字符串解析的节点替换元素。\r\n        //innerHTML 里面的元素\r\n        template = el.outerHTML\r\n      }\r\n      //  console.log(template)\r\n      //获取到元素(template模块)，将元素转换成render\r\n      const render = compileToFunction(template)\r\n      options.render = render\r\n    }\r\n    console.log('BLSJZXLC', vm);\r\n    // console.log(options.render) // 渲染到页面的都是这个render方法\r\n    //需要挂载这个组件\r\n    mountComponent(vm, el)\r\n\r\n  }\r\n}\r\n","export function renderMixin (Vue) {\r\n  //在vue 上创建这些方法  _c,_v,_s 作用创建虚拟节点  用对象来描述dom\r\n  Vue.prototype._c = function () { //创建元素\r\n    return createElement(...arguments)\r\n  }\r\n  Vue.prototype._s = function (val) { // stringify  字符串\r\n    //注意值的类型\r\n    return val == null ? \"\" : (typeof val == 'object') ? JSON.stringify(val) : val\r\n  }\r\n  Vue.prototype._v = function (text) { // 创建虚拟文本元素\r\n    return createTextVnode(text)\r\n  }\r\n  Vue.prototype._render = function () {\r\n    //将 render函数编程虚拟节点\r\n    //获取render 函数\r\n    let vm = this\r\n    const render = vm.$options.render\r\n    //执行render 函数\r\n    let vnode = render.call(this)\r\n    // console.log(vnode) //展示生成的vnode,就描述的dom结构 好处\r\n    return vnode\r\n  }\r\n}\r\n\r\nfunction createElement (tag, data = {}, ...children) {\r\n  return vnode(tag, data, data.key, children)\r\n}\r\n\r\nfunction createTextVnode (text) {\r\n  return vnode(undefined, undefined, undefined, undefined, text)\r\n}\r\n//用来产生虚拟dom\r\nfunction vnode (tag, data, key, children, text) {\r\n  return {\r\n    tag,\r\n    data,\r\n    key,\r\n    children,\r\n    text\r\n  }\r\n}","import { mergeOptions } from \"../utils/index\";\r\n\r\nexport function initGlobalApi (Vue) {\r\n  // 源码当中 你所有定义的全局方法都是 放在\r\n  // Vue.options = {} //Vue.component Vue.diretive\r\n  Vue.options = {}; // {created:[a,b,]}\r\n  Vue.mixin = function (mixin) {\r\n    // console.log(mixin) \r\n    //实现合并 就是合并对象 （我先考虑生命周期）不考虑其他的合并 data,computed watch\r\n    this.options = mergeOptions(this.options, mixin)\r\n    //  console.log( Vue.options,99999)\r\n  }\r\n}\r\n\r\n//  options:{created:[a,b,vue1]}","import { initMixin } from \"./init\";\r\nimport { liftcycleMixin } from \"./liftcycle\";\r\nimport { renderMixin } from \"./vnode/index\";\r\nimport { initGlobalApi } from \"./global-api/index\";\r\nimport { stateMixin } from './initState'\r\n\r\nfunction Vue (options) {\r\n  this._init(options)\r\n}\r\n//这些方法都是原型上的方法\r\ninitMixin(Vue)  //给原型上添加一个  init 方法\r\nliftcycleMixin(Vue) //混合生命周期 渲染\r\nrenderMixin(Vue)    // _render\r\nstateMixin(Vue)  // 给 vm 添加  $nextTick\r\n//静态方法  ，也是全局方法  Vue.component .Vue.extend Vue.mixin ..\r\ninitGlobalApi(Vue);\r\nexport default Vue"],"names":["id","Dep","_classCallCheck","subs","_createClass","key","value","depend","targer","addDep","addSub","watcher","push","notify","forEach","updata","pushTarget","popTarget","callback","pending","flush","cb","timerFunc","Promise","resolve","then","MutationObserver","observe","textNode","document","createTextNode","characterData","textContent","setImmediate","nextTick","Watcher","vm","exprOrfn","options","deps","depsId","Set","getter","obj","indexOf","argus","split","i","length","get","dep","has","add","run","old","queueWatcher","queue","flushWatcher","item","oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","_len","arguments","args","_key","result","apply","inserted","splice","ob","__ob__","obserArray","defineProperty","enumerable","configurable","isArray","__proto__","walk","Observer","data","keys","console","log","defineReactive","chilidDep","set","newValue","_typeof","initState","opts","$options","initData","props","watch","initWatch","computed","proxy","_data","call","_loop","handler","hendler","createrWatcher","$watch","stateMixin","$nextTick","immediate","ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","createASTELement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","end","pop","chars","text","replace","parseHTML","html","textEnd","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","_item$split","_item$split2","_slicedToArray","JSON","stringify","slice","genChildren","el","map","child","gen","join","node","generate","test","tokens","lastIndex","exec","index","trim","code","compileToFunction","template","ast","render","Function","patch","oldVnode","Vnode","createELm","parentElm","parentNode","insertBefore","nextSibling","removeChild","vnode","createElement","appendChild","mountComponent","callHook","updateComponent","_update","_render","liftcycleMixin","Vue","$el","hook","handlers","HOOKS","strats","parentVal","childVal","mergeHook","hooks","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","$mount","querySelector","outerHTML","renderMixin","_c","_s","val","_v","createTextVnode","undefined","initGlobalApi","mixin"],"mappings":"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"}