{"version":3,"file":"vue.js","sources":["../src/observe/array.js","../src/observe/dep.js","../src/observe/index.js","../src/utils/nextTick.js","../src/initState.js","../src/compiler/parse.js","../src/compiler/generate.js","../src/compiler/index.js","../src/vnode/patch.js","../src/observe/watcher.js","../src/liftcycle.js","../src/utils/index.js","../src/init.js","../src/vnode/index.js","../src/global-api/index.js","../src/index.js"],"sourcesContent":["//函数劫持\r\n// 1 获取到数组原型上的方法（原来的方法）\r\nlet oldArrayProtoMethods = Array.prototype;\r\n\r\n//2继承一下\r\nexport let arrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\nlet methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'reverse',\r\n    'sort',\r\n    'splice'\r\n]\r\n\r\nmethods.forEach(item => {\r\n    //进行函数劫持 push\r\n    arrayMethods[item] = function (...args) { //我自己的逻辑\r\n        //调用原来数组的方法\r\n        // console.log('数组被调用')\r\n        //当调用数组我们劫持后的这个7个方法 页面应该更新\r\n        //我们要知道数组对应那个dep\r\n        let result = oldArrayProtoMethods[item].apply(this, args)//this 就是  observer里的value\r\n        // 数组添加对象情况 ，给添加的对象，进行劫持\r\n        let inserted; // arr.push({a:1})\r\n        switch (item) {\r\n            case 'push': // arr.push({a:1},{b:2})\r\n            case 'unshift': // 这里是两个追加   追加的内容可能是对象类型，应该被再次进行 劫持\r\n                inserted = args\r\n                break;\r\n            case \"splice\":\r\n                args.splice(2); // arr.splice(0,1,{a:4})\r\n                break;\r\n        }\r\n        //判断一下 {}\r\n        let ob = this.__ob__\r\n        if(inserted) ob.obserArray(inserted); //给数组新增的值也要进行观测 {}\r\n        ob.dep.notify() //通知数组更新\r\n        return result\r\n    }\r\n})\r\n\r\n\r\n","let id = 0\r\nclass Dep {\r\n    constructor() {\r\n        this.subs = []\r\n        this.id = id++\r\n    }\r\n    //收集watcher \r\n    depend() {\r\n      \r\n        //我们希望water 可以存放 dep\r\n        //实现双休记忆的，让watcher 记住\r\n        //dep同时，让dep也记住了我们的watcher\r\n        Dep.targer.addDep(this)\r\n        // this.subs.push(Dep.targer) // id：1 记住他的dep\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher)\r\n    }\r\n    //更新\r\n    notify() {\r\n        // console.log(Dep.targer)\r\n        this.subs.forEach(watcher => {\r\n            watcher.updata()\r\n        })\r\n    }\r\n}\r\n\r\n//dep  和 watcher 关系\r\nDep.targer = null;\r\nexport function pushTarget(watcher) {  //添加 watcher\r\n\r\n    Dep.targer = watcher //保留watcher\r\n    // console.log(Dep.targer)\r\n}\r\nexport function popTarget() {\r\n    Dep.targer = null //将变量删除\r\n}\r\nexport default Dep\r\n //多对多的关系\r\n //1. 一个属性有一个dep ,dep 作用：用来收集watcher的\r\n //2. dep和watcher 关系：(1)dep 可以存放多个watcher  (2):一个watcher可以对应多个dep","import { arrayMethods } from './array'\r\nimport Dep from './dep';\r\nclass observe {\r\n    constructor(value) {\r\n        //1 给所有的对象类型添加一个dep 属性\r\n        this.dep = new Dep() // 注意 （1）{}  (2) [] 不是给里面属性添加dep\r\n        // console.log(data)\r\n        //使用defineProperty 重新定义属性 作用用来观测数据已经劫持过来\r\n          //判断一个对象是否被观察过看他有没有 __ob__这个属性\r\n          Object.defineProperty(value,\"__ob__\",{\r\n           enumerable:false, //不能枚举\r\n           configurable:false, //控制属性描述符是否能改变\r\n           value:this\r\n          })\r\n\r\n        if (Array.isArray(value)) { //注意对数组中的数据进行劫持 方法 劫持 修改数据的方法\r\n            //我希望调用push  shift unshift splice sort reverse pop 这七个方法，那么我们就可以对\r\n            //你这个方法进行劫持\r\n            // 函数劫持，切片编程 []._ \r\n            value.__proto__ = arrayMethods // 对象__proto__属性：\r\n            //监听数组中的值时对象\r\n            this.obserArray(value)\r\n        } else {\r\n            this.walk(value)\r\n        }\r\n\r\n    }\r\n    obserArray(value) {\r\n        //进行循环\r\n        value.forEach(item => {\r\n            Observer(item)\r\n        })\r\n    }\r\n    walk(data) { //数据是对象的的{a:{b:{}}}\r\n        //循环\r\n        let keys = Object.keys(data) //获取对象的key  注意这个key 只是 对象的最外层的\r\n        keys.forEach(item => {\r\n            defineReactive(data, item, data[item]) //Vue.util 中有的\r\n        })\r\n    }\r\n}\r\n//对数据进行劫持\r\nfunction defineReactive(data, key, value) {\r\n    // Object.defineProperty\r\n  let chilidDep =  Observer(value) //获取到数组对应的dep \r\n    //1给我们的每个属性添加一个dep\r\n    let dep = new Dep();\r\n    //2将dep 存放起来，当页面取值时，说明这个值用来渲染，在将这个watcher和这个属性对应起来\r\n    Object.defineProperty(data, key, {\r\n        get() { //依赖收集\r\n            // console.log('获取数据', data, key, value)\r\n            if(Dep.targer){ //让这个属性记住这个watcher\r\n                dep.depend()\r\n                //3当我们对arr取值的时候 我们就让数组的dep记住这个watcher\r\n                if(chilidDep){\r\n                    chilidDep.dep.depend() //数组收集watcher\r\n                }\r\n            }\r\n            //检测一下 dep\r\n            //获取arr的值，会调用get 方法 我希望让当前数组记住这个渲染watcher\r\n\r\n            // console.log(dep.subs)\r\n            return value\r\n        },\r\n        set(newValue) { //依赖更新\r\n            //注意设置的值和原来的值是一样的\r\n            // console.log('设置值', data, key, value)\r\n            if (newValue == value) return;\r\n            Observer(newValue) //如果用户将值改为对象继续监控\r\n            value = newValue\r\n            dep.notify()\r\n        }\r\n    })\r\n}\r\nexport function Observer(data) {\r\n    // data 我们需要进行判断 typeof  object null\r\n    //不能不是对象 并且不是null\r\n    if (typeof data !== 'object' || data == null) {\r\n        return;\r\n    }\r\n    //判断用户是否已经观测\r\n    if(data.__ob__){\r\n        return data;\r\n    }\r\n    //对这个是数据进行劫持 我们通过一个类\r\n    return new observe(data)\r\n}"," let callback = []\r\n let pending = false\r\n function flush(){\r\n    callback.forEach(cb =>cb())\r\n    pending =false\r\n }\r\n let timerFunc\r\n //处理兼容问题\r\n if(Promise){\r\n    timerFunc = ()=>{\r\n        Promise.resolve().then(flush) //异步处理\r\n    }\r\n }else if(MutationObserver){ //h5 异步方法 他可以监听 DOM 变化 ，监控完毕之后在来异步更新\r\n   let observe = new MutationObserver(flush)\r\n   let textNode = document.createTextNode(1) //创建文本\r\n   observe.observe(textNode,{characterData:true}) //观测文本的内容\r\n   timerFunc = ()=>{\r\n    textNode.textContent = 2\r\n   }\r\n }else if(setImmediate){ //ie\r\n    timerFunc = ()=>{\r\n        setImmediate(flush) \r\n    }\r\n }\r\n export function nextTick(cb){\r\n     // 1vue 2\r\n    //  console.log(cb)\r\n     //列队 [cb1,cb2]\r\n     callback.push(cb)\r\n     //Promise.then()  vue3\r\n     if(!pending){\r\n         timerFunc()   //这个方法就是异步方法 但是 处理兼容问题\r\n         pending = true\r\n     }\r\n }","import { Observer } from \"./observe/index.js\";\r\nimport { nextTick } from \"./utils/nextTick.js\";\r\n\r\nexport function initState(vm) {\r\n    // console.log(vm)\r\n    //\r\n    const opts = vm.$options\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n    if (opts.data) {\r\n        initData(vm);\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm);\r\n    }\r\n}\r\n\r\nfunction initComputed(vm) {\r\n\r\n}\r\nfunction initMethod(vm) {\r\n\r\n}\r\n//实现代理  将data中属性代理到 vm (this)\r\nfunction proxy(vm, data, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[data][key]// vm._data.a\r\n        },\r\n        set(newValue) {\r\n            vm[data][key] = newValue\r\n        }\r\n    })\r\n}\r\nfunction initData(vm) { //数据进行初始化\r\n    let data = vm.$options.data\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data\r\n    // console.log(data)\r\n    //数据的劫持方案对象Object.defineProperty\r\n    //将data中的属性代理到vm  上\r\n    for (let key in data) {\r\n        proxy(vm, \"_data\", key)\r\n    }\r\n    Observer(data)\r\n}\r\nfunction initProps(vm) {\r\n\r\n}\r\nfunction initWatch(vm) {\r\n    //1 获取watch\r\n    let watch = vm.$options.watch\r\n    console.log(watch)\r\n    //2 遍历  { a,b,c}\r\n    for (let key in watch) {\r\n        //2.1获取 他的属性对应的值 （判断)\r\n        let handler = watch[key] //数组 ，对象 ，字符，函数\r\n        if (Array.isArray(handler)) {//数组  []\r\n            hendler.forEach(item=>{\r\n                createrWatcher(vm,key,item) \r\n            })\r\n        } else {//对象 ，字符，函数\r\n           //3创建一个方法来处理\r\n           createrWatcher(vm,key,handler)\r\n        }\r\n    }\r\n\r\n}\r\n\r\n//vm.$watch(()=>{return 'a'}) // 返回的值就是  watcher 上的属性 user = false\r\n//格式化处理\r\nfunction createrWatcher(vm,exprOrfn,handler,options){\r\n   //3.1 处理handler\r\n   if(typeof handler ==='object'){\r\n       options = handler; //用户的配置项目\r\n       handler = handler.handler;//这个是一个函数\r\n   }\r\n   if(typeof handler ==='string'){// 'aa'\r\n       handler = vm[handler] //将实例行的方法作为 handler 方法代理和data 一样\r\n   }\r\n   //其他是 函数\r\n   //watch 最终处理 $watch 这个方法\r\n   return vm.$watch(exprOrfn,handler,options)\r\n}\r\n\r\nexport function stateMixin(vm) {\r\n    //列队 :1就是vue自己的nextTick  2用户自己的\r\n    vm.prototype.$nextTick = function (cb) { //nextTick: 数据更新之后获取到最新的DOM\r\n        //  console.log(cb)\r\n        nextTick(cb)\r\n    },\r\n    vm.prototype.$watch =function(exprOrfn,handler,options){ //上面格式化处理\r\n          console.log(exprOrfn,handler,options)\r\n          //实现watch 方法 就是new  watcher //渲染走 渲染watcher $watch 走 watcher  user false\r\n         //\r\n        //  if(options.immediate){\r\n        //     handler() //如果有这个immediate 立即执行\r\n        //  }\r\n    }\r\n    \r\n}\r\n\r\n//nextTick 原理 \r\n\r\n// watch 基本使用  init\r\n","\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;   // 小a-z 大A到Z 标签名称： div  span a-aa\r\n//?: 匹配不捕获\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // 捕获这种 <my:xx> </my:xx>\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`); // 标签开头的正则 捕获的内容是标签名\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`); // 匹配标签结尾的 </div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; // 匹配属性的\r\n//属性匹配   <div id=\"atts\"></div>  // aa = \"aa\" | aa = 'aa'\r\nconst startTagClose = /^\\s*(\\/?)>/; // 匹配标签结束的  <div></div>  <br/>\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g // {{xx}}  默认的 双大括号\r\n//vue3 一摸一样的\r\n\r\n//通过数据结构 树，栈  变成 ast语法树\r\n//创建树\r\nfunction createASTELement(tagName, attrs) {\r\n    return {\r\n        tag: tagName, //标签名称\r\n        type: 1, //元素类型\r\n        children: [],// 孩子列表\r\n        attrs,   //属性集合\r\n        parent: null  // 父元素\r\n    }\r\n}\r\n//<div>hello {{name}} <span>world</span></div>\r\n//创建3个方法\r\nlet root; //判断是否是根元素\r\nlet currentParent; //这个元素的当前父亲元素\r\n//4 检测 标签是否符合预期 <div><span></span></div>   栈的方式来解决这个： [div,span]\r\nlet stack = []\r\nfunction start(tagName, attrs) { //开始的标签\r\n    // console.log(tagName, attrs, '--开始--')\r\n    let element = createASTELement(tagName, attrs)\r\n    //注意：是不是根元素\r\n    if (!root) {\r\n        root = element\r\n    }\r\n    currentParent = element//当前解析的标签保存起来\r\n    stack.push(element)\r\n}\r\n//<div>hello<span></span> <p></p></div> // [div,span]\r\nfunction end(tagName) { //结束的标签\r\n    // console.log(tagName, '----结束---')\r\n    let element = stack.pop() //取出 栈中的最后一个\r\n    currentParent = stack[stack.length-1]\r\n    // debugger\r\n    if(currentParent){ //在闭合时可以知道这个标签的父亲说谁\r\n      element.parent = currentParent\r\n      currentParent.children.push(element) //将儿子放进去\r\n    }\r\n}\r\n\r\nfunction chars(text) { //文本\r\n    // console.log(text, '---文本---')\r\n    //注意：空格\r\n    text = text.replace(/\\s/g, '')\r\n    if (text) {\r\n        currentParent.children.push({\r\n            type: 3,\r\n            text\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport function parseHTML(html) {\r\n    //1解析标签  <div id=\"my\">hello {{name}} <span>world</span></div>\r\n    while (html) { // 只要html 不为空字符串就一直执行下去\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd === 0) {\r\n            //肯定是标签\r\n            // console.log('开始', html)\r\n            //这个标签是开始标签还是结束标签\r\n            const startTagMatch = parseStartTag() //开始标签匹配结果\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue; //中断（循环中）的一个迭代，如果发生指定的条件。然后继续循环中的下一个迭代。\r\n            }\r\n            //处理结束标签\r\n            const endTagMatch = html.match(endTag)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue;\r\n            }\r\n\r\n            // console.log(html)\r\n        }\r\n        //文本 \r\n        let text;\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {//处理文本\r\n            advance(text.length)\r\n            chars(text)//获取到文本\r\n        }\r\n        // console.log(html)\r\n        // break //添加break 不然死循环\r\n    }\r\n    //删除标签\r\n    function advance(n) { //将字符串进行截取操作，再跟新到html\r\n        html = html.substring(n)\r\n\r\n    }\r\n    //匹配 开头的标签\r\n    function parseStartTag() {\r\n        const start = html.match(startTagOpen)// 1：成功结果 2:false\r\n        if (start) {//成功\r\n            // console.log(start)\r\n            //组合ast语法树\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // console.log(match)\r\n            //删除开始标签\r\n            advance(start[0].length)\r\n            // console.log(html)\r\n            //属性,注意 可能又多个 属性  遍历\r\n            // 1：循环\r\n            // 2: 注意：1闭合标签 <div/>  , 2这个标签属性\r\n            let end;\r\n            let attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr) //属性\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n                // console.log(match)\r\n                //ast语法树获取，删除\r\n                advance(attr[0].length) //删除属性 （没有了）\r\n                //    break;\r\n            }\r\n            if (end) {\r\n                advance(end[0].length) //删除 >\r\n                // console.log(end)\r\n                return match\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // 最后返回  root \r\n    return root\r\n}","//思路\r\n//  <div id=\"app\" style=\"color:red\"> hello {{name}}<p>hello1</P> </div>\r\n//变成 render()\r\n// render(){\r\n//      return _c(\"div\",{id:\"app\",style:{color:\"res\"}},_v('hello'+_s(name)),_c('p'，null,_v('hello1)))\r\n//    }\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g; //注意正则匹配 lastIndex\r\n// 处理元素的属性\r\nfunction genProps(attrs) {\r\n    //处理属性\r\n    let str = ''\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i]\r\n        //注意;   style：\"color:red;font-size: 20px\r\n        if (attr.name === 'style') {\r\n            let obj = {} //对样式进行特殊处理\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':')\r\n                obj[key] = value\r\n            })\r\n            attr.value = obj //\r\n        }\r\n        //其他  'id:app',注意最后会多个属性化 逗号\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`  // -1为最后一个字符串的位置  演示一下 \r\n    // let reg =/a/g    reg.test('ad') false  \r\n}\r\n//判断是否又儿子\r\nfunction genChildren(el) {\r\n    const children = el.children\r\n    if (children) { //将所有\r\n        return children.map(child => gen(child)).join(',')\r\n    }\r\n\r\n\r\n}\r\nfunction gen(node) { //获取到的元素\r\n    //注意 是什么类型  文本   div\r\n    if (node.type === 1) {\r\n        return generate(node) //生成元素节点的字符串\r\n    } else {\r\n        let text = node.text // 获取文本  注意  普通的文本  hello{{name}}?{{num}}\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`  // _v(html)  _v('hello'+_s(name))\r\n        }\r\n        let tokens = [] //存放每一段的代码\r\n        let lastIndex = defaultTagRE.lastIndex = 0;//如果正则是全局模式 需要每次使用前变为0\r\n        let match;// 每次匹配到的结果  exec 获取 {{name}}\r\n        while (match = defaultTagRE.exec(text)) {\r\n            // console.log(match) 获取到 又{{}}  元素\r\n            //  console.log(match)\r\n           let index = match.index;// 保存匹配到的索引\r\n          // hello{{name}} ? {{num}}\r\n            if (index > lastIndex) {\r\n               tokens.push(JSON.stringify(text.slice(lastIndex,index))) //添加的是文本\r\n            //    console.log(tokens)\r\n            }\r\n            //{{name}} 添加{{}} aa\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n             lastIndex = index+match[0].length //最后 {{}} 索引位置\r\n        }\r\n        if(lastIndex<text.length){\r\n           tokens.push(JSON.stringify(text.slice(lastIndex))) \r\n        }\r\n        //最终返回出去\r\n\r\n        return `_v(${tokens.join(\"+\")})`\r\n    }\r\n\r\n\r\n}\r\n//语法层面的转移\r\nexport function generate(el) {\r\n    // console.log(el)\r\n    let children = genChildren(el)\r\n    //方法 拼接字符串  源码也是这样操作 [{}]    ${el.attrs.length?`{style:{color:red}}`:'undefined'}\r\n    let code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'}${\r\n        children ? `,${children}` : ''\r\n        })`\r\n    return code\r\n}","import { parseHTML } from \"./parse\";\r\nimport { generate } from \"./generate\";\r\n\r\n\r\nexport function compileToFunction(template) { //编译模板\r\n    let ast = parseHTML(template)\r\n    //2通过这个棵树重新的生成代码  render\r\n    let code = generate(ast) //对象\r\n    //  console.log(code)\r\n     //3将字符传变成函数\r\n    //  let render = new Function(code) //new Function()创建函数的语法： es6\r\n    let render = new Function(`with(this){return ${code}}`) //通过with 来进行取值，稍后调用\r\n    //render 函数就可以通过改变this 让这个函数内部取到结果？\r\n     //注意  code 中的变量  name 那里的  ，是不是this\r\n    //  console.log(render)\r\n     return render\r\n     //后面渲染我们的节点 ，再放到页面上去\r\n}\r\n\r\n// //with   添加一个作用域\r\n// let obj ={a:1,b:2}\r\n// with(obj ){\r\n//       console.log(a,b)\r\n// }","export function patch(oldVnode, Vnode) {\r\n    //原则  将虚拟节点转换成真实的节点\r\n    // console.log(oldVnode, Vnode)  //注意oldVnode 需要在加载 mount 添加上去  vm.$el= el\r\n\r\n    let el = createELm(Vnode) // 产生一个新的DOM\r\n    let parentElm = oldVnode.parentNode //获取老元素（app） 父亲 ，body\r\n    //   console.log(oldVnode)\r\n    //  console.log(parentElm)\r\n    //插入\r\n    parentElm.insertBefore(el, oldVnode.nextSibling) //当前真实的元素插入到app 的后面\r\n    parentElm.removeChild(oldVnode) //删除老节点\r\n    //重新赋值\r\n      return  el\r\n}\r\n\r\nfunction createELm(vnode) {\r\n    let { tag, children, key, data, text } = vnode\r\n    //注意\r\n    if (typeof tag === 'string') { //创建元素 放到 vnode.el上\r\n        vnode.el = document.createElement(tag)  //创建元素 \r\n        //有儿子\r\n        children.forEach(child => {\r\n            // 递归 儿子 将儿子渲染后的结果放到 父亲中\r\n            vnode.el.appendChild(createELm(child))\r\n        })\r\n    } else { //文本\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el //新的dom\r\n}\r\n\r\n//思路 ：虚拟dom 变成正式的dom \r\n// 1获取到真实的dom  虚拟daom\r\n// 2.将虚拟dom变成正式dom\r\n// 3.获取到旧dom的父亲元素\r\n// 4.将新的dom 方法 app 后面\r\n// 5.删除 就的元素","import { pushTarget, popTarget } from \"./dep\";\r\nimport { nextTick } from \"../utils/nextTick\";\r\n\r\n//为什么封装成一个类 ，方便我们的扩展\r\nlet id = 0; //全局的\r\nclass Watcher {\r\n    //vm 实例\r\n    //exprOrfn vm._updata(vm._render()) \r\n    constructor(vm, exprOrfn, cb, options) {\r\n        // 1.创建类第一步将选项放在实例上\r\n        this.vm = vm;\r\n        this.exprOrfn = exprOrfn;\r\n        this.cb = cb;\r\n        this.options = options;\r\n        // 2. 每一组件只有一个watcher 他是为标识\r\n        this.id = id++\r\n        // 3.判断表达式是不是一个函数\r\n        this.deps = []  //watcher 记录有多少dep 依赖\r\n        this.depsId = new Set()\r\n        if (typeof exprOrfn === 'function') {\r\n            this.getter = exprOrfn\r\n        }\r\n        // 4.执行渲染页面\r\n        this.get()\r\n\r\n    }\r\n    addDep(dep) {\r\n        //去重  判断一下 如果dep 相同我们是不用去处理的\r\n        let id = dep.id\r\n        //  console.log(dep.id)\r\n        if (!this.depsId.has(id)) {\r\n            this.deps.push(dep)\r\n            this.depsId.add(id)\r\n            //同时将watcher 放到 dep中\r\n            // console.log(666)\r\n            dep.addSub(this)\r\n\r\n        }\r\n        // 现在只需要记住  一个watcher 有多个dep,一个dep 有多个watcher\r\n        //为后面的 component \r\n    }\r\n    run() {\r\n        this.get()\r\n    }\r\n    get() {\r\n        // Dep.target = watcher\r\n\r\n        pushTarget(this) //当前的实例添加\r\n        this.getter()// 渲染页面  render()   with(wm){_v(msg,_s(name))} ，取值（执行get这个方法） 走劫持方法\r\n        popTarget(); //删除当前的实例 这两个方法放在 dep 中\r\n    }\r\n    //问题：要把属性和watcher 绑定在一起   去html页面\r\n    // (1)是不是页面中调用的属性要和watcher 关联起来\r\n    //方法\r\n    //（1）创建一个dep 模块\r\n    updata() { //三次\r\n        //注意：不要数据更新后每次都调用 get 方法 ，get 方法回重新渲染\r\n        //缓存\r\n        // this.get() //重新渲染\r\n        queueWatcher(this)\r\n    }\r\n}\r\nlet queue = [] // 将需要批量更新的watcher 存放到一个列队中\r\nlet has = {}\r\nlet pending = false\r\nfunction flushWatcher() {\r\n    queue.forEach(item => {item.run(),item.cb()})\r\n    queue = []\r\n    has = {}\r\n    pending = false\r\n}\r\nfunction queueWatcher(watcher) {\r\n    let id = watcher.id // 每个组件都是同一个 watcher\r\n    //    console.log(id) //去重\r\n    if (has[id] == null) {//去重\r\n        //列队处理\r\n        queue.push(watcher)//将wacher 添加到列队中\r\n        has[id] = true\r\n        //防抖 ：用户触发多次，只触发一个\r\n        if (!pending) {\r\n            //异步：等待同步代码执行完毕之后，再执行\r\n            // setTimeout(()=>{\r\n            //   queue.forEach(item=>item.run())\r\n            //   queue = []\r\n            //   has = {}\r\n            //   pending = false\r\n            // },0)\r\n            nextTick(flushWatcher) //  nextTick相当于定时器\r\n        }\r\n        pending = true\r\n    }\r\n}\r\nexport default Watcher\r\n\r\n//nextTick 原理\r\n\r\n//优化\r\n//1 创建nextTick 方法","import {patch} from './vnode/patch'\r\nimport Watcher from './observe/watcher'\r\nexport function  mountComponent(vm,el){\r\n   //调用render方法去渲染 el属性\r\n\r\n   //方法：先调用render方法创建虚拟节点，在将虚拟节点渲染到页面上\r\n   //源码方式\r\n   callHook(vm,\"beforeMount\")\r\n   //挂载  重新封装一下 变成一个类，这个类他是响应式变的，数据改变了我们就调用这个方法\r\n   //   vm._updata(vm._render()) \r\n   let updataComponent = ()=>{\r\n      vm._updata(vm._render())\r\n   }\r\n   //这个watcher 是用于渲染的 目前没有任何功能 ，updataComponent \r\n    new Watcher(vm,updataComponent,()=>{\r\n       callHook(vm,'updated')\r\n    },true) //Watcher 有什么用  和之前差不多，1把实例缠绕进去 ,2在给他传入一个方法\r\n    //true 标识渲染的  ，（）=》{} 跟新逻辑\r\n    callHook(vm,\"mounted\")\r\n}\r\n\r\n//创建这两个方法\r\nexport function liftcycleMixin(Vue){ //这个方法在那个地方使用的\r\n   Vue.prototype._updata = function(vnode){\r\n      //   console.log(vnode)\r\n        const vm = this\r\n        vm.$el =  patch(vm.$el,vnode) //获取到最新的渲染值\r\n   }\r\n}\r\n\r\n//生命周期初始化\r\nexport function callHook(vm,hook){\r\n   const handlers = vm.$options[hook] // created = [a1,a2,a3]\r\n   if(handlers){\r\n      for(let i = 0;i<handlers.length;i++){\r\n         handlers[i].call(vm); //改变生命周期中的this\r\n      }\r\n   }\r\n}\r\n//怎么调用\r\n//  callHook(vm,\"created\")\r\n","\r\nexport  const HOOKS = [\r\n    \"beforeCreate\",\r\n    \"created\",\r\n    \"beforeMount\",\r\n    \"mounted\",\r\n    \"beforeUpdate\",\r\n    \"updated\",\r\n    \"beforeDestory\",\r\n    \"destroyed\"\r\n]\r\n// 策略模式\r\nconst strats = {}\r\nstrats.data = function (parentVal,childVal){ //data合并\r\n    return childVal //这里应该有合并data 方法\r\n}\r\n// strats.computed =function(){\r\n// }\r\n// strats.methods = function(){}\r\n// strats.watch =function(){\r\n// }\r\n\r\nfunction mergeHook(parentVal,childVal){ //生命周期的合并\r\n    // console.log(parentVal) [a] b [a,b]\r\n  if(childVal){\r\n      if(parentVal){\r\n           return parentVal.concat(childVal);//爸爸和儿子进行并接\r\n      }else{\r\n          return [childVal]  // {}{created:function} // [created]\r\n      }\r\n  }else{\r\n       return parentVal  //不用合并 采用父亲的\r\n  }\r\n}\r\n//遍历这个hooks\r\n HOOKS.forEach(hooks=>{\r\n     strats[hooks] = mergeHook\r\n })\r\n // Vue.options ={}    Vue.mixin({})   {created:[a,b,组件上的]}\r\nexport function mergeOptions(parent,child){ \r\n    const options = {}\r\n    // console.log(parent) {created:[a]}\r\n    //遍历父亲：可能是父亲有，儿子没有\r\n   for(let key in parent){ //父亲和儿子都有在这里进行处理\r\n       mergeField(key)\r\n   }\r\n    //儿子有父亲没有\r\n   for(let key in child){ //将儿子多的赋值到父亲上\r\n      if(!parent.hasOwnProperty(key)){ \r\n          mergeField(key)\r\n      }\r\n   }\r\n    function mergeField(key){ //合并字段 created\r\n         //根据key  不同的策略进行合并\r\n        // 比如 {key:parent[key] child[key]}\r\n        //注意 我们这个key可能是一个钩子函数\r\n        // console.log(child)\r\n        if(strats[key]){ // strats.created = \r\n          options[key]=  strats[key](parent[key],child[key]) //[a]\r\n        }else{\r\n            //默认合并策略\r\n            options[key] = child[key]\r\n        }\r\n        //(1) {created:[a,b]} \r\n    }\r\n    return options\r\n}","//初始化\r\nimport { initState } from './initState'\r\nimport {compileToFunction} from './compiler/index'\r\nimport {mountComponent, callHook} from './liftcycle'\r\nimport { mergeOptions } from './utils/index';\r\nexport function initMixin(Vue) {\r\n  //面试题  全局组件和局部组件的区别\r\n  //局部组件是不是在等前的组件中可以使用\r\n  //全局组件在项目中任何地方都可以使用 原因 在组件初始化的时候 合并进来了\r\n\r\n  Vue.prototype._init = function (options) {\r\n    //el 显示页面\r\n    //data  数据初始化\r\n    //\r\n    // console.log(options)\r\n    const vm = this\r\n    // 注意 ：组件中都有一个 vue\r\n    vm.$options = mergeOptions(Vue.options,options) // 需要将用户自定义的options 合并 谁和谁合并\r\n    //初始化 状态 （将数据做一个初始化的劫持，当我改变数据时应跟新视图）\r\n    //vue组件中有很多状态 data,props watch computed\r\n    console.log( vm.$options )\r\n    callHook(vm,\"beforeCreate\")\r\n    initState(vm) //初始化状态\r\n    callHook(vm,\"created\")\r\n    //vue核心特点  响应式数据原理\r\n    //vue 是一个什么样的框架 mvvm\r\n    //数据变化视图更新，视图变化数据会被影响（mvvm） 不能跳过数据去更新视图，$ref   \r\n\r\n    // 如果当前 有el 属性说明要渲染模块\r\n    if (vm.$options.el) {\r\n      vm.$mount(vm.$options.el)\r\n    }\r\n  }\r\n  //创建 $mount 方法\r\n   Vue.prototype.$mount = function(el){\r\n          //进行挂载操作\r\n          const vm = this;\r\n          const options = vm.$options //\r\n          // console.log(el)\r\n          //获取元素\r\n          el = document.querySelector(el);\r\n          vm.$el = el\r\n          //现在我们就希望渲染页面\r\n          //1: 如果有render  渲染render\r\n          if(!options.render){ // 没有\r\n            let template = options.template\r\n             //1.1 需要判断有没有template\r\n             if(!template&& el){\r\n                //1.2 获取el 内容\r\n                //DOM接口的outerHTML属性获取描述元素（包括其后代）的序列化HTML片段。它也可以设置为用从给定字符串解析的节点替换元素。\r\n                 //innerHTML 里面的元素\r\n                template = el.outerHTML\r\n             }\r\n            //  console.log(template)\r\n             //获取到元素(template模块)，将元素转换成render\r\n             const render = compileToFunction(template)\r\n             options.render = render\r\n          }\r\n          // console.log(options.render) // 渲染到页面的都是这个render方法\r\n          //需要挂载这个组件\r\n          mountComponent(vm,el)\r\n\r\n   }\r\n}\r\n","export function renderMixin(Vue) {\r\n    //在vue 上创建这些方法  _c,_v,_s 作用创建虚拟节点  用对象来描述dom\r\n    Vue.prototype._c = function () { //创建元素\r\n          return createElement(...arguments)\r\n    }\r\n    Vue.prototype._s = function (val) { // stringify  字符串\r\n        //注意值的类型\r\n        return val == null ? \"\" : (typeof val == 'object') ? JSON.stringify(val) :val\r\n    }\r\n    Vue.prototype._v = function (text) { // 创建虚拟文本元素\r\n        return createTextVnode(text)\r\n    }\r\n    Vue.prototype._render = function () {\r\n        //将 render函数编程虚拟节点\r\n        //获取render 函数\r\n        let vm = this\r\n        const render = vm.$options.render\r\n        //执行render 函数\r\n        let vnode = render.call(this)\r\n        // console.log(vnode) //展示生成的vnode,就描述的dom结构 好处\r\n        return vnode\r\n    }\r\n}\r\n\r\nfunction createElement(tag,data={},...children){\r\n     return vnode(tag,data,data.key,children)\r\n}\r\n\r\nfunction createTextVnode(text){\r\n   return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n  //用来产生虚拟dom\r\nfunction vnode(tag,data,key,children,text){\r\n   return {\r\n       tag,\r\n       data,\r\n       key,\r\n       children,\r\n       text\r\n   }\r\n}","import { mergeOptions } from \"../utils/index\";\r\n\r\n export function initGlobalApi(Vue){\r\n     // 源码当中 你所有定义的全局方法都是 放在\r\n     // Vue.options = {} //Vue.component Vue.diretive\r\n     Vue.options = {}; // {created:[a,b,]}\r\n   Vue.mixin = function(mixin){\r\n      // console.log(mixin) \r\n      //实现合并 就是合并对象 （我先考虑生命周期）不考虑其他的合并 data,computed watch\r\n      this.options = mergeOptions(this.options,mixin)\r\n      //  console.log( Vue.options,99999)\r\n   }\r\n }\r\n\r\n//  options:{created:[a,b,vue1]}","import { initMixin } from \"./init\";\r\nimport { liftcycleMixin } from \"./liftcycle\";\r\nimport { renderMixin } from \"./vnode/index\";\r\nimport { initGlobalApi } from \"./global-api/index\";\r\nimport {stateMixin} from './initState'\r\n  \r\n  function Vue(options){\r\n    this._init(options)\r\n  }\r\n  //这些方法都是原型上的方法\r\n  initMixin(Vue)  //给原型上添加一个  init 方法\r\n  liftcycleMixin(Vue) //混合生命周期 渲染\r\n  renderMixin(Vue)    // _render\r\n  stateMixin(Vue)  // 给 vm 添加  $nextTick\r\n  //静态方法  ，也是全局方法  Vue.component .Vue.extend Vue.mixin ..\r\n    initGlobalApi(Vue);\r\n  export default Vue"],"names":["oldArrayProtoMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","item","args","result","apply","inserted","splice","ob","__ob__","obserArray","dep","notify","id","Dep","subs","targer","addDep","watcher","push","updata","pushTarget","popTarget","observe","value","defineProperty","enumerable","configurable","isArray","__proto__","walk","Observer","data","keys","defineReactive","key","chilidDep","get","depend","set","newValue","callback","pending","flush","cb","timerFunc","Promise","resolve","then","MutationObserver","textNode","document","createTextNode","characterData","textContent","setImmediate","nextTick","initState","vm","opts","$options","props","watch","initWatch","initData","computed","proxy","_data","call","console","log","handler","hendler","createrWatcher","exprOrfn","options","$watch","stateMixin","$nextTick","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createASTELement","tagName","attrs","tag","type","children","parent","root","currentParent","stack","start","element","end","pop","length","chars","text","replace","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","i","obj","split","JSON","stringify","slice","genChildren","el","map","child","gen","join","node","generate","test","tokens","lastIndex","exec","index","trim","code","compileToFunction","template","ast","render","Function","patch","oldVnode","Vnode","createELm","parentElm","parentNode","insertBefore","nextSibling","removeChild","vnode","createElement","appendChild","Watcher","deps","depsId","Set","getter","has","add","addSub","queueWatcher","queue","flushWatcher","run","mountComponent","callHook","updataComponent","_updata","_render","liftcycleMixin","Vue","$el","hook","handlers","HOOKS","strats","parentVal","childVal","mergeHook","concat","hooks","mergeOptions","mergeField","hasOwnProperty","initMixin","_init","$mount","querySelector","outerHTML","renderMixin","_c","arguments","_s","val","_v","createTextVnode","undefined","initGlobalApi","mixin"],"mappings":"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"}